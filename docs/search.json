[{"path":"https://kristyrobledo.github.io/VarReg/articles/under_the_hood.html","id":"mean-and-variance-models","dir":"Articles","previous_headings":"","what":"Mean and Variance models","title":"VarReg: Under the hood","text":"statistical methods mean variance model given Robledo Marschner (2021). Briefly, let set covariates included mean depends \\(P\\), giving \\(\\boldsymbol{z}_i = (z_{i1}, \\dots, z_{iP})^T\\) number covariates variance depends \\(Q\\) giving \\(\\boldsymbol{x}_i = (x_{i1}, \\dots, x_{iQ})^T\\). leads general model \\[\\begin{align} X_i \\sim N\\left(\\boldsymbol{\\beta}^T \\boldsymbol{z} , \\boldsymbol{\\alpha}^T \\boldsymbol{x} \\right) \\quad \\textrm{}\\quad =1, 2,...,n  \\tag{1.1} \\end{align}\\] \\(\\boldsymbol{\\beta} =( \\beta_0,...,\\beta_P)^T\\) \\(\\boldsymbol{\\alpha} = (\\alpha_0, ..., \\alpha_Q)^T\\). mean estimated using linear regression, weighted inverse current estimate variance. covariates (\\(\\boldsymbol{z}_i\\)) fit model, updated estimates \\(\\boldsymbol{\\hat\\beta}_i\\) obtained, \\(\\hat{\\boldsymbol{\\beta}}=(\\hat{\\beta}_0, .., \\hat{\\beta}_P)\\). additional step fit mean model E-step M-step converts EM algorithm ECME (Expectation Conditional Maximization Either) algorithm (Liu Rubin 1994; McLachlan Krishnan 2007), given Figure 1.1 . using idea additive variance model considered latent outcome model observed outcome sum independent outcomes, allow member covariate vector \\(\\boldsymbol{x}_i\\) additional latent variables estimated. Therefore, total \\(Q\\) variables variance model, \\(Q+1\\) independent, unobserved, latent variables, \\[\\begin{align*} Y_{} \\sim N(\\boldsymbol{\\beta} \\boldsymbol{z}, \\alpha_0 ) \\textrm{,    } \\quad Z_{iq} \\sim N(0, \\alpha_q x_{iq}) , \\end{align*}\\] \\(X_i=Y_i+Z_{i1}+...+Z_{iQ}\\). order search entire parameter space, process using sets constrained EM algorithms performed, instance combinatorial EM (CEM) algorithm. Without loss generality, assume covariate scaled \\(x_{} \\[0,1]\\). Therefore, constant term variance model (\\(\\alpha_0\\)) variance variance parameters zero. order search non-positive slope, EM algorithm fit using covariate \\(1-x_i\\) place \\(x_i\\), thus EM algorithm maximising log-likelihood parameter space estimates \\(\\alpha_0 \\geq 0\\) \\(\\alpha_q < 0\\) \\(q=1,2,...,Q\\). repeating possible covariate combinations, total \\(2^Q\\) EM algorithms order search entire parameter space. MLE \\(\\hat{\\boldsymbol{\\theta}}\\) EM algorithm achieved highest log-likelihood, \\(\\boldsymbol{\\theta}\\) vector unknown parameters, \\(\\boldsymbol{\\theta} = (\\boldsymbol{\\beta},\\boldsymbol{\\alpha})\\). \\(2^Q\\) models referred family complete data models, general algorithm instance CEM algorithm. Standard errors obtained Fisher information matrix (Robledo Marschner 2021), bootstrapping. Figure 1.1: ECME algorithm estimation mean variance","code":""},{"path":"https://kristyrobledo.github.io/VarReg/articles/under_the_hood.html","id":"mean-and-variance-models-with-censored-outcome-data","dir":"Articles","previous_headings":"","what":"Mean and Variance models with censored outcome data","title":"VarReg: Under the hood","text":"Censoring often occurs analysis biomarker data, samples measured assay usually detectable limits, data upper lower limits reached. biomarker data can detectable limit (left censored), /detectable limit (right censored), differences two biomarker readings also censored. need able accurately model data, particularly steady increase numbers biomarkers investigated clinical trials, potentially large amounts data detectable limits. studies report one-third biomarker data detectable limit (White et al. 2014). \\(X_i^*\\) true outcome data, let \\(X_i\\) outcome data observed censoring, let us account lower upper limit censoring completeness. censored data given additional level missingness CEM algorithm, thus extra level complete data. \\(X^{(L)}\\) lower limit detection \\(X^{(U)}\\) upper limit \\[\\begin{align}     X_i = \\begin{cases}     X_i^*,          & \\text{} X^{(L)} \\leq X_i^* \\leq X^{(U)}\\\\     X^{(L)},        & \\text{} X_i^* < X^{(L)} \\quad\\quad \\quad     \\textrm{ } = 1,2 .., n.\\\\     X^{(U)},        & \\text{} X_i^* > X^{(U)} \\end{cases} \\tag{2.1} \\end{align}\\] also need specify \\(c\\), censoring indicator, \\[\\begin{align*}     c_i = \\begin{cases}     0,          & \\text{} X^{(L)} \\leq X_i^* \\leq X^{(U)}\\\\     -1,        & \\text{} X_i^* < X^{(L)}\\\\     1,      & \\text{} X_i^* > X^{(U)}. \\end{cases} \\end{align*}\\] Assuming still covariates \\(x_{iq}\\) scaled \\(x_{iq} \\[0,1]\\), let us now fit model Equation (1.1) however \\(X_i^*\\) outcome data. \\(\\Phi\\) standard normal cumulative distribution function \\(\\phi\\) standard normal probability density function, two useful functions \\(R(z)=\\dfrac{\\phi(z)}{1-\\Phi(z)}\\) \\(Q(z)=\\dfrac{-\\phi(z)}{\\Phi(z)}\\) (Mills 1926). Additionally, \\(z\\) tends negative infinity, approximation \\(\\dfrac{\\phi(z)}{\\Phi(z)} \\approx -z\\) can used. likelihood function observed data model censored data \\[\\begin{align*}     l(\\boldsymbol{\\beta, \\alpha}) = \\prod_{=1}^{N} l_i \\end{align*}\\] \\[\\begin{align*} l_i = \\begin{cases}     \\displaystyle \\frac{1}{\\sigma(\\boldsymbol{\\alpha})} \\phi \\left( \\frac{X_i-\\mu(\\boldsymbol{\\beta}))}{\\sigma(\\boldsymbol{\\alpha})} \\right)  ,         & \\text{} c_i=0\\\\      \\displaystyle 1- \\Phi \\left( \\frac{\\mu(\\boldsymbol{\\beta}) - X_i^{(L)}}{\\sigma(\\boldsymbol{\\alpha})} \\right)  ,        & \\text{} c_i=-1\\\\      \\displaystyle \\Phi \\left( \\frac{\\mu(\\boldsymbol{\\beta}) - X_i^{(U)}}{\\sigma(\\boldsymbol{\\alpha})} \\right)  ,        & \\text{} c_i=1. \\end{cases} \\end{align*}\\] corresponding log-likelihood \\[\\begin{align*}     \\ell(\\boldsymbol{\\beta, \\alpha}) =  \\sum_{=1}^{N} \\ell_i, \\end{align*}\\] \\[\\begin{align*} \\ell_i = \\begin{cases}     \\displaystyle \\log \\left( \\frac{1}{\\sigma(\\boldsymbol{\\alpha})} \\phi \\left( \\frac{X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})} \\right)  \\right),          & \\text{} c_i=0\\\\      \\displaystyle \\log \\left( 1- \\Phi \\left( \\frac{\\mu(\\boldsymbol{\\beta}) - X_i^{(L)}}{\\sigma(\\boldsymbol{\\alpha})} \\right) \\right) ,        & \\text{} c_i=-1\\\\      \\displaystyle \\log \\left( \\Phi \\left( \\frac{\\mu(\\boldsymbol{\\beta}) - X_i^{(U)}}{\\sigma(\\boldsymbol{\\alpha})} \\right)  \\right),        & \\text{} c_i=1. \\end{cases} \\end{align*}\\] Now CEM algorithm, uncensored outcome variable \\(X_i^*\\) assumed composed \\(Q+1\\) independent, unobserved, latent variables: \\[\\begin{align} X_i^* =Y_i+Z_{i1}+...+Z_{iQ} \\quad \\textrm{}  \\quad Y_i &\\sim N(0, \\alpha_0) \\quad \\textrm{}  \\nonumber \\\\ Z_{i1} &\\sim N(0,  \\alpha_1x_{i1})  ,..., Z_{iQ} \\sim N(0,  \\alpha_Qx_{iQ}). \\tag{2.2} \\end{align}\\] means need find conditional expectations \\(Y_i^2\\) \\(Z_{i1}^2, ..., Z_{iQ}^2\\), given observed outcome value, \\(X_i\\), may censored. (Aitkin 1964), see bivariate normal variables \\(M\\) \\(N\\), \\[\\begin{align*} \\begin{pmatrix}M\\\\ N \\end{pmatrix} &\\sim  N \\begin{bmatrix} \\begin{pmatrix} 0\\\\ 0 \\end{pmatrix}\\!\\!, \\begin{pmatrix} 1 & \\rho \\\\ \\rho & 1 \\end{pmatrix} \\end{bmatrix}, \\end{align*}\\] conditional distribution \\(M\\) given censoring \\(N\\) can obtained. particular, given upper limit, \\(\\), shown : \\[\\begin{align} \\mathbb{E}(M^2 \\mid N>) = \\frac{\\rho^2}{R()}+1, \\tag{2.3} \\end{align}\\] \\(\\rho\\) correlation \\(M\\) \\(N\\) \\(R()\\) defined previously. know Equation (2.2) variance \\(Y_i\\) \\(\\alpha_0\\), variance \\(X_i\\) \\(\\sigma^2(\\boldsymbol{\\alpha})\\). , given Equation (2.2) general result Equation (2.3), follows , \\[\\begin{align} \\mathbb{E}(Y_i^2 \\rvert X_i>X^{(U)}) &=\\alpha_0 \\mathbb{E}\\left( \\dfrac{Y_i^2}{{\\alpha_0}} \\rvert \\dfrac{X_i}{\\sigma(\\boldsymbol{\\alpha})}>\\dfrac{X^{(U)}}{\\sigma(\\boldsymbol{\\alpha})}\\right), \\nonumber \\\\ &=\\alpha_0  \\left( \\dfrac{\\dfrac{X^{(U)}}{\\sigma(\\boldsymbol{\\alpha})} Corr(Y_i,X_i)^2 }{ R\\left(\\dfrac{X^{(U)}}{\\sigma(\\boldsymbol{\\alpha})}\\right)} +1 \\right). \\tag{2.4} \\end{align}\\] can determine correlation \\(Y_i\\) \\(X_i\\): \\[\\begin{align} Corr(Y_i, X_i) &= \\dfrac{cov(Y_i, X_i)}{\\sqrt{ \\alpha_0\\sigma^2(\\boldsymbol{\\alpha})}} \\nonumber \\\\ &=  \\dfrac{cov(Y_i,Y_i+Z_i)}{\\sqrt{ \\alpha_0\\sigma^2(\\boldsymbol{\\alpha})}} \\nonumber\\\\ &= \\dfrac{cov(Y_i, Y_i)+cov(Y_i,Z_i)}{\\sqrt{ \\alpha_0\\sigma^2(\\boldsymbol{\\alpha})}} \\nonumber\\\\ &= \\dfrac{\\alpha_0+0}{\\sqrt{ \\alpha_0\\sigma^2(\\boldsymbol{\\alpha})}}, \\nonumber \\\\ &= \\dfrac{\\sqrt{\\alpha_0}}{\\sigma(\\boldsymbol{\\alpha})}. \\tag{2.5} \\end{align}\\] can also determine correlation \\(Z_{iq}\\) \\(X_i\\), using similar argument: \\[\\begin{align} Corr(Z_{iq}, X) &= \\dfrac{\\sqrt{\\alpha_qx_{iq}}}{\\sigma(\\boldsymbol{\\alpha})}. \\tag{2.6} \\end{align}\\] Now apply correlation found Equation (2.5) Equation (2.4), order obtain conditional expectation \\(Y_i^2\\): \\[\\begin{align} \\mathbb{E}(Y_i^2 \\rvert X_i>X^{(U)}) &=\\alpha_0  + \\dfrac{\\alpha_0^2 X^{(U)}}{\\sigma^3(\\boldsymbol{\\alpha}) R\\left(\\dfrac{X^{(U)}}{\\sigma_X}\\right)}. \\tag{2.7} \\end{align}\\] expectation \\(Z_{iq}^2\\) follows argument, using Equation (2.6). order apply expectations left censored data, use function \\(Q(z)\\) rather \\(R(z)\\). censored outcome data, E-step involves calculation conditional expectations defined : \\[\\begin{align}     \\hat{Y}_i^2(\\boldsymbol{\\theta}) = \\begin{cases}     \\displaystyle \\alpha_0+\\dfrac{\\alpha_0^2}{\\sigma^2(\\boldsymbol{\\alpha})}\\left( \\dfrac{\\left(\\dfrac{X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}  \\right)^2}{\\sigma(\\boldsymbol{\\alpha})} -1\\right),           & \\text{} c_i=0 \\\\      \\displaystyle \\alpha_0+\\dfrac{\\alpha_0^2}{\\sigma^2(\\boldsymbol{\\alpha})}\\left( \\dfrac{\\dfrac{ X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}}{Q\\left(\\dfrac{ X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}\\right)}\\right) ,        & \\text{} c_i=-1 \\\\      \\displaystyle \\alpha_0+\\dfrac{\\alpha_0^2}{\\sigma^2(\\boldsymbol{\\alpha})}\\left( \\dfrac{\\dfrac{ X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}}{R\\left(\\dfrac{ X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}\\right)}\\right),        & \\text{} c_i=1, \\end{cases} \\tag{2.8} \\end{align}\\] remembering \\(\\boldsymbol{\\theta}=(\\boldsymbol{\\beta},\\boldsymbol{\\alpha})\\), \\(X_i\\) defined Equation (2.1). conditional expectations associated \\(Z_{iq}\\) follow principles, \\[\\begin{align} \\hat{Z}_{iq}^2(\\boldsymbol{\\theta}) = \\begin{cases}     \\displaystyle \\alpha_q x_{iq}+\\dfrac{\\left( \\alpha_q x_{iq} \\right)^2}{\\sigma^2(\\boldsymbol{\\alpha})}\\left( \\dfrac{\\left( \\dfrac{X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})} \\right)^2}{\\sigma(\\boldsymbol{\\alpha})} -1 \\right),         & \\text{} c_i=0\\\\      \\displaystyle \\alpha_q x_{iq}+\\dfrac{\\left( \\alpha_q x_{iq} \\right)^2}{\\sigma^2(\\boldsymbol{\\alpha})}\\left( \\dfrac{\\dfrac{ X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}}{Q\\left( \\dfrac{ X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}\\right) } \\right) ,        & \\text{} c_i=-1\\\\      \\displaystyle \\alpha_q x_{iq}+\\dfrac{\\left( \\alpha_q x_{iq} \\right)^2}{\\sigma^2(\\boldsymbol{\\alpha})}\\left( \\dfrac{\\dfrac{ X_i-\\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}}{R\\left(\\dfrac{ X_i- \\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})}\\right) }\\right),        & \\text{} c_i=1. \\end{cases} \\tag{2.9} \\end{align}\\] next step algorithm involves calculating updated estimates \\(\\boldsymbol{\\theta}\\), \\(\\boldsymbol{\\hat{\\theta}}^{new}\\). estimates \\(\\hat{\\boldsymbol{\\alpha}}\\) fixed \\(\\boldsymbol{\\beta}\\) obtained following, \\[\\begin{align} \\hat \\alpha_0^{new}=n^{-1} \\sum\\limits_{=1}^n \\hat Y_i^2 \\left( \\hat{\\boldsymbol{\\theta}}^{old} \\right) \\quad \\textrm{} \\quad \\hat{\\alpha}_q^{new}= \\frac{\\sum\\limits_{=1}^n  \\hat{Z}_{iq}^2 (\\boldsymbol{\\theta}^{old})}{n \\sum\\limits_{=1}^n  x_{iq}}. \\tag{2.10} \\end{align}\\] Previously mean variance model (Robledo Marschner 2021), weighted linear regression fit order obtain updated estimate mean parameters (\\(\\hat{\\boldsymbol{\\beta}}\\)) iteration, fixed \\(\\boldsymbol{\\alpha}=\\boldsymbol{\\hat{\\alpha}}^{new}\\). order estimate mean model censored outcome data, need fit heteroscedastic censored linear regression model. can achieved first standardizing data, performing homoscedastic censored linear regression iteration. order standardize data, divide standard deviation obtain \\[\\begin{align} \\frac{X_i}{\\sigma(\\boldsymbol{\\alpha})} \\sim \\textrm{censored } N\\left( \\dfrac{\\mu(\\boldsymbol{\\beta})}{\\sigma(\\boldsymbol{\\alpha})} ,1\\right).  \\tag{2.11} \\end{align}\\] homoscedastic censored linear regression \\(\\dfrac{X_i}{\\sigma(\\boldsymbol{\\alpha})}\\) performed, covariates \\(\\dfrac{z_{ip}}{\\sigma(\\boldsymbol{\\alpha})}\\), fixed \\(\\boldsymbol{\\alpha}=\\boldsymbol{\\hat{\\alpha}}^{new}\\). can easily implemented standard software censored normal linear regression, can performed survreg R. censored regression performed, \\(\\boldsymbol{\\hat{\\beta}}\\) estimates back transformed multiplying standard deviation \\(\\sigma(\\boldsymbol{\\alpha})\\) current fixed \\(\\boldsymbol{\\alpha}\\). process continued convergence parameter estimates. algorithm instance ECME algorithm, summarised schematically Figure xx. detailed Section xxx xxx, algorithm maximises log-likelihood restricted parameter space, need run multiple times order maximise full parameter space. Thus total \\(2^Q\\) ECME algorithms must run, combination \\(q^{th}\\) variance covariate taking value \\(x_{}\\) \\(1-x_{}\\), \\(q=1,2,...,Q\\). log-likelihood maximised entire parameter space family ECME algorithms. Figure 2.1: ECME algorithm estimation mean variance censored outcome data Standard errors implemented bootstrapping. practice, may take time datasets many parameters fit variance model. due number parameter spaces, thus ECME algorithms, must run.","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/articles/under_the_hood.html","id":"skew-normal-distribution","dir":"Articles","previous_headings":"3 Models for the location, scale and shape","what":"Skew-normal distribution","title":"VarReg: Under the hood","text":"skew-normal distribution distribution extends normal distribution allow non-zero skew (Azzalini 2013). distribution three parameters, location parameter \\(\\xi\\) (\\(\\xi \\(-\\infty, \\infty)\\)), scale parameter \\(\\omega\\) (\\(\\omega \\(0, \\infty)\\)) shape parameter \\(\\nu\\) (\\(\\nu \\(-\\infty, \\infty)\\)). \\(\\nu<0\\), distribution left skewed, \\(\\nu >0\\) distribution right skewed. normal distribution recovered \\(\\nu=0\\). probability density function skew normal \\[\\begin{align*} f(x)= \\frac{2}{\\omega}\\phi \\left( \\frac{x-\\xi}{\\omega} \\right)\\Phi \\left(\\nu \\left(\\frac{x-\\xi}{\\omega}\\right) \\right)\\quad -\\infty < x < \\infty \\end{align*}\\] \\(\\phi\\) \\(\\Phi\\) density distribution functions standard normal distribution, respectively. random variable \\(X\\) skew-normal distribution parameters \\((\\xi, \\omega, \\nu)\\), written \\[\\begin{align*} X \\sim  SN\\left(\\xi, \\omega^2, \\nu\\right). \\end{align*}\\]","code":""},{"path":"https://kristyrobledo.github.io/VarReg/articles/under_the_hood.html","id":"maximum-likelihood-estimation","dir":"Articles","previous_headings":"3 Models for the location, scale and shape","what":"Maximum likelihood estimation","title":"VarReg: Under the hood","text":"\\(X_1, ..., X_n\\) independent identically distributed observations \\(SN(\\xi, \\omega^2, \\nu)\\), likelihood function sample given \\[\\begin{align} \\mathcal{L}(\\xi, \\omega, \\nu)=\\frac{2^n}{\\omega^n} \\prod\\limits_{=1}^n \\phi \\left(\\frac{X_i-\\xi}{\\omega} \\right) \\Phi \\left( \\nu \\left( \\frac{X_i-\\xi}{\\omega}\\right) \\right), \\tag{3.1} \\end{align}\\] corresponding log-likelihood (omitting constant term) reduces \\[\\begin{align} L(\\xi, \\omega, \\nu)=- n\\log(\\omega) + \\sum\\limits_{=1}^n \\log \\phi \\left(\\frac{X_i-\\xi}{\\omega}\\right) + \\sum\\limits_{=1}^n  \\log \\Phi \\left(\\nu \\left(\\frac{X_i-\\xi}{\\omega}\\right) \\right). \\end{align}\\] explained , likelihood Equation (3.1) censored Gaussian likelihood viewed function \\(\\xi\\) \\(\\omega\\), probit regression likelihood viewed function \\(\\nu\\). useful allows straightforward cyclic coordinate ascent algorithm used obtain MLE. optimisation multi-variable function, cyclic coordinate ascent algorithm involves optimisation function respect one variable holding variables constant, repeating respect variables (Lange 2013). context, cyclic coordinate ascent algorithm cycle censored Gaussian model (keeping \\(\\nu\\) constant), probit regression (keeping \\(\\xi\\) \\(\\omega\\) constant). Although already exists algorithm obtaining MLE skew-normal model SN package (Azzalini 2016) R, introduce new method easily generalises regression modelling. order see (3.1) equivalent probit regression likelihood viewed function \\(\\nu\\) alone, note (3.1) proportional following function \\(\\nu\\), \\[\\begin{align} \\mathcal{L}_2(\\nu|\\xi, \\omega) &=  \\prod_{=1}^n \\Phi \\left( \\nu \\left( \\frac{X_i-\\xi}{\\omega}\\right) \\right).  \\tag{3.2} \\end{align}\\] Now let residuals defined follows, fixed \\(\\xi\\) \\(\\omega\\), \\[\\begin{align*} r_i = \\frac{X_i-\\xi}{\\omega}. \\end{align*}\\] , (3.2) \\[\\begin{align*} \\mathcal{L}_2(\\nu|\\xi, \\omega) &=  \\prod_{=1}^n \\Phi \\left( \\nu r_i \\right) = \\prod_{r_i \\geq 0} \\Phi(\\nu |r_i|) \\prod_{r_i < 0} \\left[ 1-\\Phi(\\nu |r_i|) \\right]. \\end{align*}\\] exactly probit regression likelihood binary outcome \\[\\begin{align*}     V_i = \\begin{cases}     \\displaystyle 1         & \\text{} r_i \\geq 0\\\\      \\displaystyle 0        & \\text{} r_i<0 \\end{cases} \\end{align*}\\] linear predictor \\(\\nu |r_i|\\). Thus, fixed \\(\\xi\\) \\(\\omega\\), (3.1) can maximised function \\(\\nu\\) fitting probit regression binary outcome \\(V_i\\), intercept single covariate \\(|r_i|\\). Next, let us look estimation \\(\\xi\\) \\(\\omega\\) parameters, holding \\(\\nu\\) constant. examine (3.1), now show can considered censored Gaussian likelihood, first component regards uncensored data, second component regards censored data (multiplied constant \\(\\nu\\)). Note well, observation contributes censored uncensored components likelihood. purpose performing censored regression, utilise algorithm developed censored outcome data. order make use algorithm, data needs manipulated ensure observation contributing components likelihood. Firstly, create censoring indicator, \\(c\\), length \\(2n\\). first \\(n\\) elements set \\(0\\), elements \\(n+1, ..., 2n\\) set \\(-1\\) indicate left censoring. Next, create vector \\(1\\)s called \\(\\) length \\(2n\\), also create new outcome vector called \\(D\\), observations \\(1, ..., n\\) \\(X\\), observations \\(n+1, ..., 2n\\) also \\(X\\). corresponds \\[ D= \\left( \\begin{array}{c}     X_1      \\\\     \\vdots \\\\     X_n \\\\     X_1 \\\\     \\vdots \\\\     X_n      \\end{array} \\right), ~~~ = \\left( \\begin{array}{c}     1      \\\\     \\vdots \\\\     1    \\\\     1 \\\\     \\vdots \\\\     1     \\end{array} \\right), ~~ \\text{} ~~ c= \\left( \\begin{array}{c}     0      \\\\     \\vdots \\\\     0    \\\\     1 \\\\     \\vdots \\\\     1     \\end{array} \\right). \\] Now, likelihood observed data model \\[\\begin{align*} l(\\xi, \\omega | \\nu) = \\prod_{=1}^{2n} l_i , \\end{align*}\\] \\[\\begin{align*} l_i= \\begin{cases}     \\displaystyle  \\frac{1}{\\omega} \\phi \\left( \\frac{D_i-I_i}{\\omega} \\right)  ,           & \\text{} c_i=0 \\\\      \\displaystyle 1- \\Phi \\left( \\nu \\left( \\frac{I_i - D_i}{\\omega}\\right)  \\right)  ,        & \\text{} c_i=-1, \\end{cases} \\end{align*}\\] equates \\[\\begin{align} l_i= \\begin{cases}     \\displaystyle  \\frac{1}{\\omega} \\phi \\left( \\frac{D_i-I_i}{\\omega} \\right)  ,           & \\text{} c_i=0 \\\\      \\displaystyle  \\Phi \\left( \\nu \\left( \\frac{D_i-I_i}{\\omega} \\right) \\right)  ,        & \\text{} c_i=-1. \\end{cases} \\tag{3.3} \\end{align}\\] Now can compare Equations (3.1) (3.3), see follow similar form, \\(D_i = X_i\\) \\(I_i = \\xi\\). , can fit censored regression model update \\(\\hat{\\xi}\\) \\(\\hat{\\omega}\\) new outcome data \\(D_i\\), using censoring indicator (\\(c_i\\)) indicate censored observations. Note censored data observations require \\(I_i\\) \\(D_i\\) multiplied constant \\(\\nu\\). location model contains vector \\(I_i\\) covariate, , intercept term. Meanwhile, scale model contains intercept . parameter \\(I_i\\) covariate estimate \\(\\hat{\\xi}\\) intercept estimate scale model \\(\\hat{\\omega}\\). calculated current estimates \\(\\hat{\\xi}\\), \\(\\hat{\\omega}\\) \\(\\hat{\\nu}\\), examine convergence previously (Robledo Marschner 2021). convergence met, iterate cyclic coordinate ascent algorithm re-calculating residuals, performing another probit regression performing censored Gaussian regression, reach convergence criteria. also importance note whether use censored normal algorithm , another censored normal algorithm provided SN package, obtain result.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/articles/under_the_hood.html","id":"extension-to-lss-regression-model","dir":"Articles","previous_headings":"3 Models for the location, scale and shape","what":"Extension to LSS regression model","title":"VarReg: Under the hood","text":"Now algorithm developed estimate \\(\\xi\\), \\(\\omega\\) \\(\\nu\\) parameters skew normal model, let us extend incorporate regression model three parameters. case model becomes \\[\\begin{align*} X_i \\sim SN\\left(\\xi_0+\\sum\\limits_{p=1}^P \\xi_p s_{ip},~   \\omega_0+\\sum\\limits_{q=1}^Q \\omega_q l_{iq}, ~  \\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik} \\right) \\quad \\textrm{} =1, 2,\\dots,n, \\end{align*}\\] covariates \\(s_{ip}\\) (\\(p=1,...,P\\)) location model, covariates \\(l_{iq}\\) (\\(q=1,...,Q\\)) scale model covariates \\(u_{ik}\\) (\\(k=1,...,K\\)) shape model. likelihood model \\[\\begin{align} \\mathcal{L}(\\boldsymbol{\\xi},\\boldsymbol{\\omega}, \\boldsymbol{\\nu}) = \\left(\\frac{2}{\\left(\\sqrt{\\omega_0 + \\sum\\limits_{q=1}^Q \\omega_q l_{iq}}\\right)}\\right)^n \\prod\\limits_{=1}^n \\phi \\left(\\frac{ X_i-\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p s_{ip} }{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q l_{iq}}} \\right) \\nonumber   \\Phi \\left( \\left( \\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik} \\right) \\left( \\frac{( X_i-\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p s_{ip}}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q l_{iq}}}\\right) \\right) ,  \\tag{3.4} \\end{align}\\] log-likelihood reduces \\[\\begin{align*} L(\\boldsymbol{\\xi},\\boldsymbol{\\omega}, \\boldsymbol{\\nu})=- n \\log \\left(\\sqrt{\\omega_0 + \\sum\\limits_{q=1}^Q \\omega_q l_{iq}} \\right) + \\sum\\limits_{=1}^n \\log \\frac{\\left( X_i-\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p s_{ip} \\right)}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q l_{iq}}} \\\\ + \\sum\\limits_{=1}^n  \\log \\Phi \\left(\\left( \\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik}\\right) \\frac{X_i-\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p s_{ip} }{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q l_{iq}}} \\right), \\\\ \\end{align*}\\] \\(\\boldsymbol{\\xi} = (\\xi_1, \\xi_2, ..., \\xi_P)\\), \\(\\boldsymbol{\\omega}= (\\omega_1, \\omega_2, ..., \\omega_Q)\\) \\(\\boldsymbol{\\nu}=(\\nu_1, \\nu_2, ..., \\nu_K)\\). Similarly approach taken previous section, likelihood (3.4) can seen censored Gaussian likelihood viewed function \\(\\boldsymbol{\\xi}\\) \\(\\boldsymbol{\\omega}\\), probit regression likelihood viewed function \\(\\boldsymbol{\\nu}\\). Therefore, can take approach , extension cyclic coordinate ascent algorithm. steps outlined section may generalised follows. First, residuals can defined follows, fixed \\(\\boldsymbol{\\xi}\\) \\(\\boldsymbol{\\omega}\\), \\[\\begin{align*} r_i = \\frac{X_i-\\xi_0- \\sum\\limits_{p=1}^P \\xi_p s_{ip}}{\\sqrt{{\\omega}_0 + \\sum\\limits_{q=1}^Q \\omega_q l_{iq}}}. \\end{align*}\\] Now, \\[\\begin{align*} l_2(\\boldsymbol{\\nu}|\\boldsymbol{\\xi}, \\boldsymbol{\\omega}) &=  \\prod_{=1}^n \\Phi \\left( \\left( \\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik} \\right) r_i \\right) \\\\ &= \\prod_{r_i \\geq 0} \\Phi \\left( \\left(\\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik}\\right) |r_i| \\right) \\prod_{r_i < 0} \\left[ 1-\\Phi \\left( \\left(\\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik}\\right) |r_i| \\right) \\right]. \\end{align*}\\] section 3.2 , exactly probit regression likelihood binary outcome (\\(V_i\\)). Therefore fixed \\(\\boldsymbol{\\xi}\\) \\(\\boldsymbol{\\omega}\\), likelihood (3.4) can maximised function \\(\\boldsymbol{\\nu}\\) fitting probit regression binary outcome \\(V_i\\) covariate \\(|r_i|\\), covariate interest \\(u_{ik}\\) multiplied \\(|r_i|\\), intercept term. estimate \\(\\nu_0\\) obtained estimate \\(\\lvert r_i \\rvert\\) parameter model, estimates \\(\\nu_{k}\\) obtained parameter relevant \\(u_{ik}\\) covariate model. Next, let us consider estimation \\(\\boldsymbol{\\xi}\\) \\(\\boldsymbol{\\omega}\\), maintaining \\(\\boldsymbol{\\nu}\\) constant. Firstly, similar Section 3.2, must create censoring indicator \\(c\\) new outcome vector \\(D\\). Also, must create new variable covariates \\(s_{ip}\\) length \\(2n\\). covariates, values \\(=1,...,n\\) values \\(s_{ip}\\) \\(=1,...,n\\), values \\(=n+1, ..., 2n\\) also \\(s_{ip}\\). Let us call new covariates length \\(2n\\), \\(z_{ip}\\). manner, scale covariates manipulated length \\(2n\\). covariate, \\(l_{iq}\\), duplicated first set values, \\(=1,..n\\), respective value \\(l_{iq}\\). next values, \\(=n+1,..,2n\\), also respective value \\(l_{iq}\\). Let us call new covariates \\(x_{iq}\\). Section 2 describes extension censored regression model \\(\\boldsymbol{\\mu}\\) \\(\\boldsymbol{\\sigma^2}\\), observed data likelihood extended model \\[\\begin{align*} l(\\boldsymbol{\\xi}, \\boldsymbol{\\omega} | \\boldsymbol{\\nu}) = \\prod_{=1}^{2n} l_i , \\end{align*}\\] \\[\\begin{align*} l_i= \\begin{cases}     \\displaystyle  \\frac{1}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q x_{iq}}} \\phi \\left( \\frac{D_i-\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p z_{ip}}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q x_{iq}}} \\right)  ,            & \\text{} c_i=0 \\\\      \\displaystyle 1- \\Phi \\left( \\left(\\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik}\\right) \\left( \\frac{\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p z_{ip}- D_i}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q x_{iq}}}\\right)  \\right)  ,        & \\text{} c_i=-1, \\end{cases} \\end{align*}\\] equates \\[\\begin{align} l_i= \\begin{cases}     \\displaystyle  \\frac{1}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q x_{iq}}} \\phi \\left( \\frac{D_i-\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p z_{ip}}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q x_{iq}}} \\right)  ,            & \\text{} c_i=0 \\\\      \\displaystyle  \\Phi \\left( \\left(\\nu_0+\\sum\\limits_{k=1}^K \\nu_k u_{ik}\\right) \\left( \\frac{D_i-\\xi_0 - \\sum\\limits_{p=1}^P \\xi_p z_{ip}}{\\sqrt{\\omega_0+\\sum\\limits_{q=1}^Q \\omega_q x_{iq}}}\\right)  \\right)  ,        & \\text{} c_i=-1. \\end{cases}  \\tag{3.5} \\end{align}\\] current estimates \\(\\boldsymbol{\\xi}\\), \\(\\boldsymbol{\\omega^2}\\) \\(\\boldsymbol{\\nu}\\) obtained, cyclic coordinate ascent algorithm continues cycle probit regression censored normal regression convergence. algorithm summarised schematically Figure 3.1. algorithm, estimation standard errors obtained bootstrapping . Figure 3.1: cyclic coordinate ascent algorithm estimation location, scale shape","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/articles/VarReg.html","id":"install-packages","dir":"Articles","previous_headings":"","what":"Install packages","title":"VarReg","text":"Firstly, need install VarReg package others perform code .","code":"library(VarReg) library(gamlss) #for the CD4 dataset library(tidyverse) library(kableExtra) rna<-read.csv(file=\"resources/rna.csv\") #load rna dataset"},{"path":"https://kristyrobledo.github.io/VarReg/articles/VarReg.html","id":"cd4-dataset","dir":"Articles","previous_headings":"","what":"CD4 dataset","title":"VarReg","text":"dataset located within gamlss package. CD4 type white blood cell, dataset, measured uninfected children born HIV-1 infected women. dataset contains 609 measurements CD4 cell counts child’s age measurements taken. Lets reproduce graphic paper, showing younger ages variation CD4 counts older ages, demonstrating heteroscedasticity.","code":"data(\"CD4\")  str(CD4) #> 'data.frame':    609 obs. of  2 variables: #>  $ cd4: num  387 2183 904 1681 656 ... #>  $ age: num  4.5 0.83 2.06 1.44 2.67 1.17 1.94 1.72 2.54 1.66 ... ggplot(data=CD4, aes(y=cd4, x=age)) +   geom_point()+   xlab(\"Age of child in years\")+   ylab(\"CD4 cell count\")+   theme_minimal()"},{"path":"https://kristyrobledo.github.io/VarReg/articles/VarReg.html","id":"linear-model-in-mean-and-variance","dir":"Articles","previous_headings":"CD4 dataset","what":"Linear model in mean and variance","title":"VarReg","text":"Let us fit linear model mean variance model, like key outputs model fit: Key estimates model:","code":"cd4.linear<-semiVarReg(y = CD4$cd4,                        x=CD4$age,                        meanmodel = \"linear\",                        varmodel = \"linear\",                        maxit=10000) cd4.linear$aic #> [1] 8999.12 cd4.linear$bic #> [1] 9016.767 cd4.linear$mean #> Intercept   CD4$age  #>  884.7263 -124.8084 cd4.linear$variance #> Intercept   CD4$age  #> 218069.56 -23922.79"},{"path":"https://kristyrobledo.github.io/VarReg/articles/VarReg.html","id":"visualise-the-model-with-plotvarreg-function","dir":"Articles","previous_headings":"CD4 dataset","what":"Visualise the model with plotVarReg function:","title":"VarReg","text":"","code":"plotVarReg(cd4.linear, xlab = \"Age in years\", ylab = \"CD4 cell count\")"},{"path":"https://kristyrobledo.github.io/VarReg/articles/VarReg.html","id":"searching-for-the-optimal-spline","dir":"Articles","previous_headings":"CD4 dataset","what":"Searching for the optimal spline","title":"VarReg","text":"Searching max 7 knots mean variance, maximum iterations (maxit) 100 minimise time taken search: lets look AIC table identify best model located: best model saved within cd4.best list. key estimates best model : ie. 6 knots mean 3 variance, parameter estimates given. can plot best model: residuals, still appears deviations normality residuals, seen Q-Q plot histogram. Therefore incorporation shape parameter investigated.","code":"cd4.best <- searchVarReg(y=CD4$cd4,                          x=CD4$age,                          maxknots.m = 7,                          maxknots.v = 7,                          selection=\"AIC\",                          maxit=100) cd4.best$AIC %>%   kbl(digits=1) cd4.best$best.model$knots.m #> [1] 6 cd4.best$best.model$knots.v #> [1] 3  cd4.best$best.model$mean #>    Intercept M_Knt6_Base1 M_Knt6_Base2 M_Knt6_Base3 M_Knt6_Base4 M_Knt6_Base5 M_Knt6_Base6 M_Knt6_Base7  #>     32.98833   1597.06078    713.32197    582.58478    472.08281    291.50092    269.24506    220.66235  #> M_Knt6_Base8  #>    155.83254 cd4.best$best.model$variance #>    Intercept V_Knt3_Base1 V_Knt3_Base2 V_Knt3_Base3 V_Knt3_Base4 V_Knt3_Base5  #>   40801.4581  411830.6370  109290.5901    2784.9777     914.4245  -25616.3670 plotVarReg(cd4.best$best.model,            xlab = \"Age in years\",            ylab = \"CD4 cell count\")"},{"path":"https://kristyrobledo.github.io/VarReg/articles/VarReg.html","id":"lssvarreg-function","dir":"Articles","previous_headings":"CD4 dataset","what":"lssVarReg function","title":"VarReg","text":"order fit models shape parameter, utilise lssVarReg() function. Firstly, let us fit constant shape parameter 6 knots mean 3 knots variance, , Let us fit two models, one constant shape parameter one linear model shape, following code. want speed model, can use starting estimates (best model) parameter space restrictions, like constant model: compare models paper: Comparison AIC shape models CD4 cell counts. compare residuals:","code":"con.shape<-lssVarReg(y=CD4$cd4,                      x=CD4$age,                      locationmodel=\"semi\",                      knots.l=6,                      scale2model=\"semi\",                      knots.sc=3,                      mono.scale = \"inc\",                      shapemodel=\"constant\",                      maxit=1000 )  linear.shape<-lssVarReg(y=CD4$cd4,                         x=CD4$age,                         locationmodel=\"semi\",                         knots.l=6,                         scale2model=\"semi\",                         knots.sc=3,                         shapemodel=\"linear\",                         int.maxit=1000,                         print.it=TRUE,                         maxit=1000 ) con.shape_faster <- lssVarReg(y=CD4$cd4, x=CD4$age,                               locationmodel=\"semi\",                               knots.l=6,                               scale2model=\"semi\",                               knots.sc=3,                               shapemodel=\"constant\",                               para.space=\"positive\",                               location.init = cd4.best$best.model$mean,                               scale2.init = cd4.best$best.model$variance,                               int.maxit = 10000,                               maxit=1000 ) data.frame(Model = c(\"No shape\", \"Constant shape\", \"Linear shape\"),            AIC = c(cd4.best$best.model$aic, con.shape$aic, linear.shape$aic),            BIC = c(cd4.best$best.model$bic, con.shape$bic, linear.shape$bic)) %>%   kbl(digits=1,       align='c',       caption = \"Comparison of AIC from shape models for CD4 cell counts.\") %>%   kable_paper(full_width = TRUE ) n<-length(CD4$age) knot6<-bs(CD4$age, df= 8, degree=2) knot3<-bs(CD4$age, df= 5, degree=2)  ##normal model npred.mean<-colSums(t(cbind(rep(1,n),knot6))*cd4.best$best.model$mean) npred.var<-colSums(t(cbind(rep(1,n),knot3))*cd4.best$best.model$variance)  stand.res<- (CD4$cd4-npred.mean)**2/(npred.var) chiq<-qchisq(c(1:n)/(n+1), df=1)  #constant residuals con.res<-lss_calc(con.shape) con.res<-con.res[order(con.res$CD4.age),]  #linear residuals lin.res<-lss_calc(linear.shape) lin.res<-lin.res[order(lin.res$CD4.age),]  par(mfrow=c(1,3)) plot(chiq, sort(stand.res), main=NULL, ylim=c(0, 10), pch=19, ylab=\"Squared standardised residuals after fit with no shape\", xlab=\"Chi-Square(1) quantiles\") abline(0,1) mtext('A', side=3, line=2, at=0, adj=3)  plot(chiq, sort(con.res$stand.res2), main=NULL, ylim=c(0, 10),pch=19, ylab=\"Squared standardised residuals after LSS (constant) fit\", xlab=\"Chi-Square(1) quantiles\") abline(0,1) mtext('B', side=3, line=2, at=0, adj=3) plot(chiq, sort(lin.res$stand.res2), main=NULL, ylim=c(0, 10),pch=19, ylab=\"Squared standardised residuals after LSS (linear) fit\", xlab=\"Chi-Square(1) quantiles\") abline(0,1) mtext('C', side=3, line=2, at=0, adj=3)"},{"path":"https://kristyrobledo.github.io/VarReg/articles/VarReg.html","id":"viral-load-dataset-censored-outcome-data","dir":"Articles","previous_headings":"","what":"Viral load dataset (censored outcome data)","title":"VarReg","text":"dataset HIV viral load (blood concentration HIV RNA log10 scale) measured 257 participants. Prior commencing clinical trial, participants blood assayed twice short period time. Although underlying viral load unchanged time, readings differ due measurement error. Another important aspect measurements detected particular assay limit, case, 2.70. Lets plot data: Now let us search optimal knots, using censoring indicator Monotonic decreasing model: AIC models: Find smallest AIC: Allows increasing decreasing: AIC models: Smallest AIC:","code":"ggplot(rna, aes(x=x, y=y))+   geom_point()+   geom_hline(yintercept = 0)+   xlab(\"Mean viral load\")+   ylab(\"Difference in viral load\")+   theme_minimal() rna.best <- searchVarReg(y=rna$y,                          x=rna$x,                          maxknots.m = 5,                          maxknots.v = 5,                          mono.var = \"dec\",                          selection=\"AIC\",                          maxit=1000) rna.best$AIC %>%   kbl(digits=1) min(rna.best$AIC) #> [1] 300.1673 rna.best2 <- searchVarReg(y=rna$y,                           x=rna$x,                           cens.ind = rna$cc,                           maxknots.m = 5,                           maxknots.v = 5,                           selection=\"AIC\",                           maxit=1000) rna.best2$AIC %>%   kbl(digits=1) min(rna.best2$AIC) #> [1] 299.3517"},{"path":"https://kristyrobledo.github.io/VarReg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kristy Robledo. Author, maintainer. Ian Marschner. Thesis advisor.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Robledo K (2023). VarReg: Semi-Parametric Variance Regression. https://github.com/kristyrobledo/VarReg, https://kristyrobledo.github.io/VarReg/.","code":"@Manual{,   title = {VarReg: Semi-Parametric Variance Regression},   author = {Kristy Robledo},   year = {2023},   note = {https://github.com/kristyrobledo/VarReg, https://kristyrobledo.github.io/VarReg/}, }"},{"path":"https://kristyrobledo.github.io/VarReg/index.html","id":"varreg","dir":"","previous_headings":"","what":"Semi-Parametric Variance Regression","title":"Semi-Parametric Variance Regression","text":"goal VarReg provide methods fitting semi-parametric mean variance models, normal censored data. also extended allow regression location, scale shape parameters. algorithm based upon EM (Expectation Maximisation) algorithm, stable similar methods like GAMLSS. algorithm paper published: Robledo, K.P., Marschner, .C. new algorithm fitting semi-parametric variance regression models. Comput Stat 36, 2313–2335 (2021). https://doi.org/10.1007/s00180-021-01067-6","code":""},{"path":"https://kristyrobledo.github.io/VarReg/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Semi-Parametric Variance Regression","text":"Kristy Robledo https://github.com/kristyrobledo NHMRC Clinical Trials Centre, University Sydney","code":""},{"path":"https://kristyrobledo.github.io/VarReg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Semi-Parametric Variance Regression","text":"can install released version VarReg CRAN : development version GitHub :","code":"install.packages(\"VarReg\") remotes::install_github(\"kristyrobledo/VarReg\")"},{"path":"https://kristyrobledo.github.io/VarReg/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Semi-Parametric Variance Regression","text":"examples, see repository https://github.com/kristyrobledo/VarReg-paper-code based providing code draft software paper https://github.com/kristyrobledo/VarReg-paper. basic example read mcycle dataset perform linear model mean variance: Now can plot model:   can look results: can also run model semi-parametric mean (4 internal knots) semi-parametric variance (2 knots):  Lastly, can fit model model location, scale shape. Im going run , just show code, takes run laptop! Enjoy!","code":"library(VarReg) #> Welcome to the 'VarReg' package to perform semi-parametric regression ## read in dataset data(mcycle) ## run a model with linear mean and linear variance: linmodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"linear\", varmodel=\"linear\",   maxit=10000) plotVarReg(linmodel) ##can also add CI plotVarReg(linmodel, ci=TRUE, ci.type = \"im\") #> [1] \"CI=true, type=information matrix\" linmodel$loglik #> [1] -683.5092  linmodel$mean #>    Intercept mcycle$times  #>    -53.69517      1.11797  linmodel$variance #>    Intercept mcycle$times  #>   3824.07225    -66.39011 semimodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"semi\", varmodel=\"semi\", knots.m=4, knots.v=2, maxit=10000) plotVarReg(semimodel) ## run a model with semi-parametric mean (4 internal knots) and semi-parametric monotonic ## variance (2 knots): ## not run ##semimodel_inc<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"semi\", varmodel=\"semi\", ##knots.m=4, knots.v=2, mono.var=\"inc\") ##  LSS model followed by the basic plot command #lssmodel<-lssVarReg(mcycle$accel, mcycle$times,  locationmodel=\"linear\", scale2model=\"linear\", shapemodel=\"constant\", maxit=10000) #plotlssVarReg(lssmodel, xlab=\"Time in seconds\", ylab=\"Acceleration\")"},{"path":"https://kristyrobledo.github.io/VarReg/reference/censlinVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Censored Linear mean and variance regression — censlinVarReg","title":"Censored Linear mean and variance regression — censlinVarReg","text":"censlinVarReg performs censored multivariate mean multivariate variance regression. function designed used  semiVarReg function.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/censlinVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Censored Linear mean and variance regression — censlinVarReg","text":"","code":"censlinVarReg(   dat,   mean.ind = c(2),   var.ind = c(2),   cens.ind = c(3),   mean.intercept = TRUE,   para.space = c(\"all\", \"positive\", \"negative\"),   mean.init = NULL,   var.init = NULL,   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/censlinVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Censored Linear mean and variance regression — censlinVarReg","text":"dat Dataframe containing outcome covariate data. Outcome data must first column, censored values set limits. Covariates mean variance model next columns. mean.ind Vector containing column numbers data 'dat' fit covariates mean model. 0 indicates constant mean option. NULL indicates zero mean option. var.ind Vector containing column numbers data 'dat' fit covariates variance model. FALSE indicates constant variance option. cens.ind Vector containing column number data 'dat' indicate censored data. 0 indicates censoring, -1 indicates left (lower) censoring 1 indicates right (upper) censoring. mean.intercept Logical indicate intercept included mean model. Default TRUE. para.space Parameter space search variance parameter estimates. \"positive\" means search positive parameter space, \"negative\" means search negative parameter space \"\" means search . Default . mean.init Vector initial estimates used mean model. var.init Vector initial estimates used variance model. control List control parameters. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/censlinVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Censored Linear mean and variance regression — censlinVarReg","text":"censlinVarReg returns list output including: converged: Logical argument indicating convergence occurred. iterations: Total iterations performed EM algorithm. reldiff: positive convergence tolerance occured final iteration. loglik: Numeric variable maximised log-likelihood. boundary: Logical argument indicating estimates boundary. aic.c: Akaike information criterion corrected small samples aic: Akaike information criterion bic: Bayesian information criterion hqc: Hannan-Quinn information criterion mean.ind: Vector integer(s) indicating column number(s) dataframe  data fit mean model. mean: Vector maximum likelihood estimates mean parameters. var.ind: Vector integer(s) indicating column(s) dataframe  data fit variance model. variance: Vector maximum likelihood estimates variance parameters. cens.ind: Integer indicating column dataframe data  corresponds censoring indicator. data: Dataframe containing variables included model.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/censloop_em.html","id":null,"dir":"Reference","previous_headings":"","what":"The Censored data EM loop — censloop_em","title":"The Censored data EM loop — censloop_em","text":"censloop_em EM loop function censored data utilised various higher level functions.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/censloop_em.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Censored data EM loop — censloop_em","text":"","code":"censloop_em(   meanmodel,   theta.old,   beta.old,   p.old,   x.0,   X,   censor.ind,   mean.intercept,   maxit,   eps )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/censloop_em.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Censored data EM loop — censloop_em","text":"meanmodel Dataframe containing covariates fit mean model. NULL zero mean model FALSE constant mean model. theta.old Vector containing initial variance parameter estimates fit variance model. beta.old Vector containing initial mean parameter estimates fit mean model. p.old Vector length n containing initial variance estimate. x.0 Matrix covariates (length n) fit variance model. rescaled zero minimum. NULL, constant variance model. X Vector length n outcome variable. censor.ind Vector length n censoring indicator. 0=uncensored, -1=left censored 1 right censored. mean.intercept Logical indicate mean intercept included model. maxit Number maximum iterations EM algorithm. eps small number convergence criteria.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/censloop_em.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Censored data EM loop — censloop_em","text":"list results EM algorithm, including: conv: Logical argument indicating convergence occurred : Total iterations performed EM algorithm reldiff: positive convergence tolerance occured final iteration. theta.new: Vector variance parameter estimates. Note yet  transformed back appropriate scale mean: Vector mean parameter estimates fittedmean: Vector fitted mean estimates p.old: Vector fitted variance estimates","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/criterion.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of information criterion — criterion","title":"Calculation of information criterion — criterion","text":"criterion calculates various information criterion algorithms package","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/criterion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of information criterion — criterion","text":"","code":"criterion(n, loglik, param)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/criterion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of information criterion — criterion","text":"n Number observations loglik Loglikelihood model param Number parameters fit model","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/criterion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of information criterion — criterion","text":"list four IC aic.c: Akaike information criterion corrected small samples aic: Akaike information criterion bic: Bayesian information criterion hqc: Hannan-Quinn information criterion","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lidar.html","id":null,"dir":"Reference","previous_headings":"","what":"lidar dataset. — lidar","title":"lidar dataset. — lidar","text":"dataset containing 221 observations light detection ranging (LIDAR) experiment.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lidar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lidar dataset. — lidar","text":"","code":"lidar"},{"path":"https://kristyrobledo.github.io/VarReg/reference/lidar.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"lidar dataset. — lidar","text":"data frame 221 rows 2 variables: range distance travelled light reflected back source. logratio logarithm ratio received light two laser sources.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lidar.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"lidar dataset. — lidar","text":"Sigrist, M. (Ed.) (1994). Air Monitoring Spectroscopic Techniques (Chemical Analysis Series, vol. 197). New York: Wiley.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lidar.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"lidar dataset. — lidar","text":"Ruppert, D., Wand, M.P. Carroll, R.J. (2003) Semiparametric Regression Cambridge University Press. http://stat.tamu.edu/~carroll/semiregbook/","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lidar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"lidar dataset. — lidar","text":"","code":"library(VarReg) data(lidar) attach(lidar) plot(range,logratio)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/linVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear mean and variance regression function — linVarReg","title":"Linear mean and variance regression function — linVarReg","text":"linVarReg performs multivariate mean multivariate variance regression. function  designed used  semiVarReg function.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/linVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear mean and variance regression function — linVarReg","text":"","code":"linVarReg(   dat,   var.ind = c(2),   mean.ind = c(2),   para.space = c(\"all\", \"positive\", \"negative\"),   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/linVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear mean and variance regression function — linVarReg","text":"dat Dataframe containing outcome covariate data. Outcome data must first column. Covariates mean variance model next columns. var.ind Vector containing column numbers data 'dat' fit covariates variance model. FALSE indicates constant variance option. mean.ind Vector containing column numbers data 'dat' fit covariates mean model. 0 indicates constant mean option. NULL indicates zero mean option. para.space Parameter space search variance parameter estimates. \"positive\" means search positive parameter space, \"negative\" means search negative parameter space \"\" means search . control List control parameters. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/linVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear mean and variance regression function — linVarReg","text":"linVarReg returns list output including: converged: Logical argument indicating convergence occurred. iterations: Total iterations performed EM algorithm. reldiff: positive convergence tolerance occured final iteration. loglik: Numeric variable maximised log-likelihood. boundary: Logical argument indicating estimates boundary. aic.c: Akaike information criterion corrected small samples aic: Akaike information criterion bic: Bayesian information criterion hqc: Hannan-Quinn information criterion mean.ind: Vector integer(s) indicating column number(s) dataframe  data fit mean model. mean: Vector maximum likelihood estimates mean parameters. var.ind: Vector integer(s) indicating column(s) dataframe  data fit variance model. variance: Vector maximum likelihood estimates variance parameters. cens.ind: Integer indicating column dataframe data  corresponds censoring indicator. Always NULL. data: Dataframe containing variables included model.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_em.html","id":null,"dir":"Reference","previous_headings":"","what":"The EM loop for the main mean and variance function — loop_em","title":"The EM loop for the main mean and variance function — loop_em","text":"loop_em basic EM loop function utilised various higher level functions.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_em.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The EM loop for the main mean and variance function — loop_em","text":"","code":"loop_em(meanmodel, theta.old, p.old, x.0, X, maxit, eps)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_em.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The EM loop for the main mean and variance function — loop_em","text":"meanmodel Dataframe containing covariates fit mean model. NULL zero mean model FALSE constant mean model. theta.old Vector containing initial variance parameter estimates fit variance model. p.old Vector length n containing containing initial variance estimate. x.0 Matrix covariates (length n) fit variance model. rescaled zero minimum. NULL, constant variance model. X Vector length n outcome variable. maxit Number maximum iterations EM algorithm. eps small number convergence criteria.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_em.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The EM loop for the main mean and variance function — loop_em","text":"list results EM algorithm, including conv: Logical argument indicating convergence occurred : Total iterations performed EM algorithm reldiff: positive convergence tolerance occured final iteration. theta.new: Vector variance parameter estimates. Note yet  transformed back appropriate scale mean: Vector mean parameter estimates fittedmean: Vector fitted mean estimates p.old: Vector fitted variance estimates","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_lss.html","id":null,"dir":"Reference","previous_headings":"","what":"The EM loop for the LSS model — loop_lss","title":"The EM loop for the LSS model — loop_lss","text":"loop_lss EM loop function LSS model utilised various higher level functions","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_lss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The EM loop for the LSS model — loop_lss","text":"","code":"loop_lss(   alldat,   xiold,   omega2old,   nuold,   mean.ind,   var.ind,   nu.ind,   para.space,   maxit,   eps,   int.maxit,   print.it )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_lss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The EM loop for the LSS model — loop_lss","text":"alldat Dataframe containing data models. Outcome first column. xiold Vector initial location parameter estimates fit location model. omega2old Vector initial scale2 parameter estimates fit scale2 model. nuold Vector initial nu parameter estimates fit nu model. mean.ind Vector containing column numbers data 'alldat' fit covariates location model. var.ind Vector containing column numbers data 'alldat' fit covariates scale2 model. FALSE indicates constant variance model. nu.ind Vector containing column numbers data 'alldat' fit covariates nu model. NULL indicates constant model. para.space Parameter space search variance parameter estimates. \"positive\" means search positive parameter space, \"negative\" means search negative parameter space \"\" means search . maxit Number maximum iterations main EM algorithm. eps small number convergence criteria. int.maxit Number maximum iterations internal EM algorithm location scale. print.Logical indicate estimates iteration printed.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/loop_lss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The EM loop for the LSS model — loop_lss","text":"list results algorithm, including conv, reldiff, , mean, xi.new, omega2.new, nu.new, fitted.xi conv: Logical argument indicating convergence occurred : Total iterations performed EM algorithm reldiff: positive convergence tolerance occured final iteration xinew: Vector location parameter estimates omega2new: Vector scale squared parameter estimates nunew: Vector shape parameter estimates fitted.xi: Vector fitted location estimates","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi parametric location, shape and scale regression — lssVarReg","title":"Semi parametric location, shape and scale regression — lssVarReg","text":"lssVarReg performs semiparametric location (\\(\\xi\\) xi), shape (\\(\\nu\\) nu) scale (\\(\\omega\\) omega) regression model. Currently, designed single covariate fit location, scale shape models.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi parametric location, shape and scale regression — lssVarReg","text":"","code":"lssVarReg(   y,   x,   locationmodel = c(\"constant\", \"linear\", \"semi\"),   scale2model = c(\"constant\", \"linear\", \"semi\"),   shapemodel = c(\"constant\", \"linear\"),   knots.l = 2,   knots.sc = 2,   knots.sh = 2,   degree = 2,   mono.scale = c(\"none\", \"inc\", \"dec\"),   para.space = c(\"all\", \"positive\", \"negative\"),   location.init = NULL,   scale2.init = NULL,   shape.init = NULL,   int.maxit = 1000,   print.it = FALSE,   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi parametric location, shape and scale regression — lssVarReg","text":"y Vector containing outcome data. Must missing data. x Vector containing covariate data, length y. Must missing data. locationmodel Text specify location model fit. Options: \"constant\" = constant model (intercept ), \"linear\" = linear term x covariate, \"semi\" = semiparametric spline (specify knots.l). scale2model Text specify scale^2 model fit. Options: \"constant\" = constant term , \"linear\" = linear term x covariate, \"semi\" = semiparametric spline (specify knots.sc) shapemodel Text specify shape model fit. Options: \"constant\" = constant shape model, \"linear\" = linear term x covariate, \"semi\" = semiparametric spline (specify knots.sh). knots.l Integer indicating number internal knots fit location model. Default '2'. (Note knots placed equidistantly x.) knots.sc Integer indicating number internal knots fit scale^2 model. Default '2'. (Note knots placed equidistantly x.) knots.sh Integer indicating number internal knots fit shape model. Default '2'. (Note knots placed equidistantly x.) degree Integer indicate degree splines fit location scale.  Default '2'. mono.scale Text indicate whether scale2 model monotonic. Default \"none\" (monotonic constraints). Options \"inc\" increasing \"dec\" decreasing. chosen, appropriate para.space set autopmatically (\"positive\" inc, \"negative\" dec). para.space Text indicate parameter space search scale2 parameter estimates. \"positive\" means search positive parameter space, \"negative\" means search negative parameter space \"\" means search parameter spaces. Default . location.init Vector initial parameter estimates location model. Defaults vector 1's appropriate length. scale2.init Vector initial parameter estimates scale^2 model. Defaults vector 1's appropriate length. shape.init Vector initial parameter estimates shape model. Defaults vector 1's appropriate length. int.maxit Integer maximum iterations internal location scale EM algorithm. Default 1000 iterations. print.Logical printing progress estimates iteration. Default FALSE. control List control parameters algorithm. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi parametric location, shape and scale regression — lssVarReg","text":"lssVarReg returns object class \"lssVarReg\", inherits class \"VarReg\". object class lssVarReg list following components: modeltype: Text indicating model fit, always \"LSS model\". locationmodel, scale2model, shapemodel, knots.l, knots.sc, knots.sh, degree,mono.scale : Returning input variables described converged: Logical argument indicating convergence occurred. iterations: Total iterations performed main algorithm (including  internal EM algorithm). reldiff: positive convergence tolerance occured final iteration. loglik: Numeric variable maximised log-likelihood. aic.c: Akaike information criterion corrected small samples aic: Akaike information criterion bic: Bayesian information criterion hqc: Hannan-Quinn information criterion location: Vector maximum likelihood estimates location parameters. scale2: Vector maximum likelihood estimates scale (squared) parameters. shape: Vector maximum likelihood estimates shape parameters. data: Dataframe containing variables included model.","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi parametric location, shape and scale regression — lssVarReg","text":"","code":"## run a model with linear mean, linear variance and constant shape (not run): ## lssmodel<-lssVarReg(mcycle$accel, mcycle$times,  locationmodel=\"linear\", scale2model=\"linear\", ## shapemodel=\"constant\",  maxit=10000)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi parametric location, shape and scale regression — lssVarReg.multi","title":"Semi parametric location, shape and scale regression — lssVarReg.multi","text":"lssVarReg.multi performs semiparametric location (\\(\\xi\\) xi), shape (\\(\\nu\\) nu) scale (\\(\\omega\\) omega) regression model. designed multiple covariates fit location, scale shape models.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi parametric location, shape and scale regression — lssVarReg.multi","text":"","code":"lssVarReg.multi(   y,   x,   locationmodel = c(\"constant\", \"linear\", \"semi\"),   location.vars = c(1),   scale2model = c(\"constant\", \"linear\", \"semi\"),   scale2.vars = c(1),   shapemodel = c(\"constant\", \"linear\", \"semi\"),   shape.vars = c(1),   knots.l = NULL,   knots.sc = NULL,   knots.sh = NULL,   degree = 2,   location.init = NULL,   scale2.init = NULL,   shape.init = NULL,   int.maxit = 1000,   print.it = FALSE,   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi parametric location, shape and scale regression — lssVarReg.multi","text":"y Vector containing outcome data. Must missing data. x Matrix containing covariate data, length y. Must missing data. locationmodel Vector specify location model fit covariate. Options: \"constant\" = constant model (intercept ), \"linear\" = linear term x covariate, \"semi\" = semiparametric spline (specify knots.l). location.vars Vector specify column(s) x referring covariates fit location model, eg c(1,2) indicates columns 1 2 x. Must length locationmodel specifies fit linear/semi. semi, use knots.l specify knots. scale2model Vector specify scale^2 model fit covariate. Options: \"constant\" = constant term , \"linear\" = linear term x covariate, \"semi\" = semiparametric spline (specify knots.sc) scale2.vars Vector specify column(s) x referring covariates fit scale^2 model, eg c(1,2) indicates columns 1 2 x. Must length scale2model specifies fit linear/semi. semi, use knots.sc specify knots. shapemodel Vector specify shape model fit covariate. Options: \"constant\" = constant shape model, \"linear\" = linear term x covariate, \"semi\" = semiparametric spline (specify knots.sh). shape.vars Vector specify column(s) x referring covariates fit shape model, eg c(1,2) indicates columns 1 2 x. Must length shapemodel specifies fit linear/semi. semi, use knots.sh specify knots. knots.l Vector indicating number internal knots fit location model covariate. Default '2'. (Note knots placed equidistantly x.) knots.sc Vector indicating number internal knots fit scale^2 model covariate. Default '2'. (Note knots placed equidistantly x.) knots.sh Vector indicating number internal knots fit shape model covariate. Default '2'. (Note knots placed equidistantly x.) degree Integer indicate degree splines fit location, scale shape.  Default '2'. location.init Vector initial parameter estimates location model. Defaults vector 1's appropriate length. scale2.init Vector initial parameter estimates scale^2 model. Defaults vector 1's appropriate length. shape.init Vector initial parameter estimates shape model. Defaults vector 1's appropriate length. int.maxit Integer maximum iterations internal location scale EM algorithm. Default 1000 iterations. print.Logical printing progress estimates iteration. Default FALSE. control List control parameters algorithm. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi parametric location, shape and scale regression — lssVarReg.multi","text":"lssVarReg returns object class \"lssVarReg\", inherits class \"VarReg\". object class lssVarReg list following components: modeltype: Text indicating model fit, always \"LSS model\" model. locationmodel, scale2model, shapemodel, knots.l, knots.sc, knots.sh, degree,mono.scale : Returning input variables described converged: Logical argument indicating convergence occurred. iterations: Total iterations performed main algorithm (including  internal EM algorithm). reldiff: positive convergence tolerance occured final iteration. loglik: Numeric variable maximised log-likelihood. aic.c: Akaike information criterion corrected small samples aic: Akaike information criterion bic: Bayesian information criterion hqc: Hannan-Quinn information criterion location: Vector maximum likelihood estimates location parameters. scale2: Vector maximum likelihood estimates scale (squared) parameters. shape: Vector maximum likelihood estimates shape parameters. data: Dataframe containing variables included model.","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/reference/lssVarReg.multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi parametric location, shape and scale regression — lssVarReg.multi","text":"","code":"## not run ## library(palmerpenguins) ## cc<-na.omit(penguins) ## y<-cc$body_mass_g ## x<-as.data.frame(cbind(cc$bill_length_mm, cc$flipper_length_mm,cc$bill_depth_mm)) ## colnames(x) <-c(\"bill length mm\", \"flipper length mm\",\"bill depth mm\") ## model1<-lssVarReg.multi(y, x, ##                         locationmodel=\"linear\", location.vars = 2, ##                         scale2model=\"constant\", ##                         shapemodel=c(\"linear\", \"semi\"), shape.vars = c(2,3), ##                         knots.sh = 1, int.maxit=10 ) ## model1[-21] ## print model"},{"path":"https://kristyrobledo.github.io/VarReg/reference/lss_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculations for SN — lss_calc","title":"Calculations for SN — lss_calc","text":"lss_calc performs calculations transforming SN data (location, scale shape) mean, variance skew. function utilised , higher level functions.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lss_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculations for SN — lss_calc","text":"","code":"lss_calc(x)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/lss_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculations for SN — lss_calc","text":"x Object class lssVarReg (output lssVarReg).","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/lss_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculations for SN — lss_calc","text":"dataframe containing: y: y variable x: x variable eta: \\(\\eta\\) fitted location estimates omega: \\(\\omega\\) fitted scale estimates shape: \\(\\alpha\\) fitted shape estimates predicted mean: fitted mean estimates predicted variance: fitted variance estimates Predicted skewness: fitted skewness estimates stand.res2: Squared standardised residuals","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/mcycle.html","id":null,"dir":"Reference","previous_headings":"","what":"mcycle dataset. — mcycle","title":"mcycle dataset. — mcycle","text":"dataset containing 133 observations simulated motorcycle accident, used test crash helmets.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/mcycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mcycle dataset. — mcycle","text":"","code":"mcycle"},{"path":"https://kristyrobledo.github.io/VarReg/reference/mcycle.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mcycle dataset. — mcycle","text":"data frame 133 rows 2 variables: times milliseconds time impact accel g, acceleration head","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/mcycle.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"mcycle dataset. — mcycle","text":"Silverman, B. W. (1985) aspects spline smoothing approach non-parametric curve fitting. Journal Royal Statistical Society series B 47, 1-52.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/mcycle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mcycle dataset. — mcycle","text":"Venables, W. N. Ripley, B. D. (1999) Modern Applied Statistics S-PLUS. Third Edition. Springer.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/mcycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"mcycle dataset. — mcycle","text":"","code":"library(VarReg) data(mcycle) attach(mcycle) plot(times,accel)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotlssVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots graphics for a location, scale and shape regression model — plotlssVarReg","title":"Plots graphics for a location, scale and shape regression model — plotlssVarReg","text":"plotlssVarReg used produce graphics models fit VarReg package  lssVarReg function. skew-normal distribution used fit type model, data needs  transformed SN parameters (location, scale shape) typical mean,  variance skew parameters.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotlssVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots graphics for a location, scale and shape regression model — plotlssVarReg","text":"","code":"plotlssVarReg(x, knot.lines = FALSE, xlab = \"x\", ylab = \"y\")"},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotlssVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots graphics for a location, scale and shape regression model — plotlssVarReg","text":"x Object class lssVarReg (output lssVarReg). knot.lines Logical show knot lines graphics (model type \"semi\"). Default TRUE xlab Label placed x axis graphics (covariate) ylab Label placed y axis graphics (outcome)","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotlssVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots graphics for a location, scale and shape regression model — plotlssVarReg","text":"graphic returned, well dataframe. graphic returned 2 2 plot : mean function x-variable, without knot lines indicated variance function x-variable, without knot lines indicated skew function x-variable, without knot lines indicated Q-Q plot squared residuals model, plotted Chi-squared (df=1)  distribution. data skew-normal distribution, residuals follow  Chi-squared (df=1) distribution, regardless skew. dataframe returned contains following columns: x: x variable y: y variable eta:  (\\(\\eta\\)), location parameter omega: (\\(\\omega\\)), scale parameter shape: (\\(\\nu\\)),  shape parameter predicted~mean: (\\(\\mu\\)), mean predicted~variance: (\\(\\sigma^2\\)),  variance predicted~skewness: (\\(\\gamma\\)),  skew stand.res2: standardised residuals squared.","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotlssVarReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots graphics for a location, scale and shape regression model — plotlssVarReg","text":"","code":"data(mcycle) ## not run. LSS model followed by the basic plot command ##lssmodel<-lssVarReg(mcycle$accel, mcycle$times,  locationmodel=\"linear\", scale2model=\"linear\", ##shapemodel=\"constant\", maxit=10000) ##lssplot_out<-plotlssVarReg(lssmodel, xlab=\"Time in seconds\", ylab=\"Acceleration\")"},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Plots graphics for a mean and variance regression model — plotVarReg","title":"Plots graphics for a mean and variance regression model — plotVarReg","text":"plotVarReg produce graphics models fit package.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plots graphics for a mean and variance regression model — plotVarReg","text":"","code":"plotVarReg(   x,   knot.lines = FALSE,   ci = FALSE,   ci.type = c(\"im\", \"boot\"),   bootreps = 1000,   xlab = \"x\",   ylab = \"y\",   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plots graphics for a mean and variance regression model — plotVarReg","text":"x Object class VarReg (see semiVarReg). knot.lines Logical indicate knot lines shown graphics (model type \"semi\"). Default FALSE ci Logical indicate 95% CI shown plots. Default FALSE ci.type=\"im\". ci.type Text indicate type CI plot. Either \"im\" (information matrix) \"boot\" (bootstrapped). Default \"im\". bootreps Integer indicate number bootstrap replications performed ci.type=\"boot\". Default 1000. xlab Text label placed x axis graphics (covariate) ylab Text label placed y axis graphics (outcome) control list control parameters used bootstrapping. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plots graphics for a mean and variance regression model — plotVarReg","text":"function returns 2x2 plot, slightly different plots given, depending outcome data. uncensored data, plots : mean function x-variable, without 95% CI,  without knot lines indicated variance function x-variable, without 95% CI without knot lines indicated Q-Q plot residuals model histogram residuals model outcome data censored, last two plots longer appropriate.  Given censored residuals model, can compare squared standardised residuals  (given black) censoring indicator chi-squared distribution one  degree freedom (given red). one plots given censored data,  plot data, coloured censoring status. triangles point  top bottom censored triangles point bottom top censored.","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/reference/plotVarReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plots graphics for a mean and variance regression model — plotVarReg","text":"","code":"data(mcycle) linmodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"linear\", varmodel=\"linear\", maxit=10000) plotVarReg(linmodel)  plotVarReg(linmodel, ci=TRUE, ci.type=\"im\", ylab=\"Range\", xlab=\"Time in seconds\") #> [1] \"CI=true, type=information matrix\"  ##not run ##plotVarReg(linmodel, ci=TRUE, ci.type=\"boot\", bootreps=10,ylab=\"Acceleration\", ##xlab=\"Time in seconds\")  ##not run ##semimodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"semi\", varmodel=\"semi\", ##knots.m=4, knots.v=2, maxit=10000) ##plotVarReg(semimodel, ci=TRUE, ci.type=\"boot\",bootreps=10,ylab=\"Acceleration\", ##xlab=\"Time in seconds\", maxit=10000)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/searchVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches for best semi parametric mean and variance regression model — searchVarReg","title":"Searches for best semi parametric mean and variance regression model — searchVarReg","text":"searchVarReg performs multiple semi-parametric mean variance regression models covariate interest, order search optimal number knots. best model chosen based information criterion preference (\"selection\"). moment, designed single covariate fit mean variance models.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/searchVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches for best semi parametric mean and variance regression model — searchVarReg","text":"","code":"searchVarReg(   y,   x,   cens.ind = NULL,   maxknots.m = 3,   maxknots.v = 3,   degree = 2,   mono.var = c(\"none\", \"inc\", \"dec\"),   selection = c(\"AIC\", \"AICc\", \"HQC\", \"BIC\"),   print.it = FALSE,   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/searchVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches for best semi parametric mean and variance regression model — searchVarReg","text":"y Vector containing outcome data. Must missing data censored values must set limits detection. x Vector containing covariate data. Must missing data length y. cens.ind Vector containing censoring indicator, applicable. must missing data contained vector vector length y. \"0\" values indicate uncensored data, \"1\" indicates right, upper, censoring \"-1\" indicates left, lower, censoring. default NULL indicates censored data. maxknots.m Integer indicating maximum number internal knots fit mean model. Default 3. (Note knots placed equidistantly x.) maxknots.v Integer indicating maximum number internal knots fit variance model. Default 3. (Note knots placed equidistantly x.) degree degree splines fit mean variance. Default 2. mono.var Text indicate whether variance model monotonic (applied 'linear' semi-parametric variance models). Default \"none\" (monotonic constraints). Options \"inc\" increasing \"dec\" decreasing. variance model linear, parameter space constrained (positive increasing negative decreasing). semi-parametric variance models, appropriate monotonic B splines fit semi-parametric variance model. selection Text indicate information criteria used selection  best model. Choices \"AIC\", \"AICc\", \"BIC\" \"HQC\". Default \"AIC\". print.Logical indicate whether print progress model models performed. Default FALSE. control list control parameters. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/searchVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches for best semi parametric mean and variance regression model — searchVarReg","text":"searchVarReg returns list, following components: ll: dataframe log-likelihoods models fit. AIC: dataframe AIC models fit. parameters  fit mean model given columns, parameters variance given  rows. AICc: dataframe AIC-c models fit. BIC: dataframe BIC models fit. HQC: dataframe HQC models fit. best.model: object class VarReg (see semiVarReg)  containing output optimal model (model within specified models  mean variance lowest information criterion according criterion selected).","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/searchVarReg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Searches for best semi parametric mean and variance regression model — searchVarReg","text":"matrix models performed, increasing complexity. Mean models start zero mean model, constant mean, linear, 0 internal knots, etc, maximum internal knots specified  maxknots.m. Variance models start constant variance, linear variance, 0 internal knots,   etc, max internal knots specified maxknots.v. Note function can take time run, due number models fit. window appear windows based systems show progress bar function.","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/reference/searchVarReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Searches for best semi parametric mean and variance regression model — searchVarReg","text":"","code":"data(mcycle) ### not run ### find<-searchVarReg(mcycle$accel, mcycle$times, maxknots.v=3, maxknots.m=3, ### selection=\"HQC\", maxit=10000)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi parametric mean and variance regression — semiVarReg","title":"Semi parametric mean and variance regression — semiVarReg","text":"semiVarReg performs semi-parametric mean variance regression models. Currently, designed single covariate fit mean variance models.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi parametric mean and variance regression — semiVarReg","text":"","code":"semiVarReg(   y,   x,   cens.ind = NULL,   meanmodel = c(\"zero\", \"constant\", \"linear\", \"semi\"),   mean.intercept = TRUE,   varmodel = c(\"constant\", \"linear\", \"semi\"),   knots.m = 2,   knots.v = 2,   degree = 2,   mono.var = c(\"none\", \"inc\", \"dec\"),   para.space = c(\"all\", \"positive\", \"negative\"),   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi parametric mean and variance regression — semiVarReg","text":"y Vector containing outcome data. Must missing data censored values must set limits detection. x Vector containing covariate data. Must missing data length y. cens.ind Vector containing censoring indicator, applicable. must missing data contained vector vector length y. \"0\" values indicate uncensored data, \"1\" indicates right, upper, censoring \"-1\" indicates left, lower, censoring. default NULL indicates censored data. meanmodel Text specify mean model fit data. possible inputs \"zero\", \"constant\", \"linear\" \"semi\". \"semi\" indicates semi-parametric spline model, number internal knots specified knots.m. mean.intercept Logical argument  indicate mean model include intercept term. option available censored mean model, default=TRUE. varmodel Text specify variance model fit data. possible inputs \"constant\", \"linear\" \"semi\". \"semi\" indicates semi-parametric B-spline model, number internal knots specified knots.v. knots.m Integer indicating number internal knots fit semi-parametric mean model. Knots placed equidistantly covariate. default value 2. knots.v Integer indicating number internal knots fit semi-parametric variance model. Knots placed equidistantly covariate. default value 2. degree Integer indicating degree splines fit mean variance models. default value 2. mono.var Text indicate whether variance model monotonic. Note  available \"constant\" variance model. Options \"none\", \"inc\" \"dec\", default=\"none\". \"Inc\" indicates increasing monotonic \"dec\" indicates decreasing monotonic. variance model linear, parameter space constrained (positive increasing negative decreasing). semi-parametric variance models, appropriate monotonic B-splines fit semi-parametric variance model. para.space Text indicate parameter space search scale2 parameter estimates. \"positive\" means search positive parameter space, \"negative\" means search  negative parameter space \"\" means search parameter spaces. Default . control list control parameters. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi parametric mean and variance regression — semiVarReg","text":"semiVarReg returns object class \"VarReg\" inherits components class \"glm\". object class \"VarReg\" list containing following components: modeltype: Text indicating model fit, indicating censored approach uncensored approach performed. knots.m, knots.v, degree, meanmodel, varmodel: Returning input variables described converged: Logical argument indicating convergence occurred. iterations: Total iterations performed. reldiff: positive convergence tolerance occurred final iteration. loglik: Numeric variable maximised log-likelihood. boundary: Logical argument indicating MLE boundary parameter space. aic.c: Akaike information criterion corrected small samples aic: Akaike information criterion bic: Bayesian information criterion hqc: Hannan-Quinn information criterion mean.ind: Vector integer(s) indicating column number(s) dataframe  data fit mean model. mean: Vector maximum likelihood estimates mean parameters. var.ind: Vector integer(s) indicating column(s) dataframe  data fit variance model. variance: Vector maximum likelihood estimates variance parameters. cens.ind: Integer indicating column dataframe data  corresponds censoring indicator. data: Dataframe containing variables included model.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi parametric mean and variance regression — semiVarReg","text":"","code":"data(mcycle) ## run a model with linear mean and linear variance: linmodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"linear\", varmodel=\"linear\",  maxit=10000) ## run a model with semi-parametric mean (4 internal knots) and semi-parametric variance (2 knots): ##not run ##semimodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"semi\", varmodel=\"semi\", ##knots.m=4, knots.v=2, maxit=10000) ## run a model with semi-parametric mean (4 internal knots) and semi-parametric monotonic ## variance (2 knots): ## not run ##semimodel_inc<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"semi\", varmodel=\"semi\", ##knots.m=4, knots.v=2, mono.var=\"inc\")"},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.multi.html","id":null,"dir":"Reference","previous_headings":"","what":"Semi parametric mean and variance regression (multivariate) — semiVarReg.multi","title":"Semi parametric mean and variance regression (multivariate) — semiVarReg.multi","text":"semiVarReg.multi performs semi-parametric mean variance regression models. designed multiple covariates fit mean variance models.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.multi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Semi parametric mean and variance regression (multivariate) — semiVarReg.multi","text":"","code":"semiVarReg.multi(   y,   x,   mean.model = c(\"zero\", \"constant\", \"linear\", \"semi\"),   mean.vars = c(1),   knots.m = NULL,   var.model = c(\"constant\", \"linear\", \"semi\"),   var.vars = c(1),   knots.v = NULL,   degree = 2,   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.multi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Semi parametric mean and variance regression (multivariate) — semiVarReg.multi","text":"y Vector containing outcome data. Must missing data censored values must set limits detection. x Matrix containing covariate data. Must missing data length y. mean.model Vector specify mean model fit data. possible inputs \"zero\", \"constant\", vector indicate covariates \"linear\" \"semi\". \"semi\" indicates semi-parametric spline model, number internal knots specified knots.m. covariates fit, covariate needs indicator \"linear\" \"semi\", mean.vars specifies covariate. mean.vars Vector specify column(s) x referring covariates fit mean model, eg c(1,2) indicates columns 1 2 x. Must length mean.model specifies fit linear/semi. semi, use knots.m specify knots. knots.m Vector indicating number internal knots fit covariate(s) fit semi-parametric mean model. Must one entry per \"semi\" covariate mean.model. Knots placed equidistantly covariate. var.model Vector specify variance model fit data. possible inputs \"constant\", vector indicate covariate \"linear\" \"semi\". \"semi\" indicates semi-parametric B-spline model, number internal knots specified knots.v. var.vars Vector specify column(s) x referring covariates fit variance model, eg c(1,2) indicates columns 1 2 x. Must length var.model specifies fit linear/semi. semi, use knots.v specify knots. knots.v Vector indicating number internal knots fit semi-parametric variance model. Knots placed equidistantly covariate. degree Integer indicating degree splines fit mean variance models. default value 2. control list control parameters. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.multi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Semi parametric mean and variance regression (multivariate) — semiVarReg.multi","text":"semiVarReg.multi returns object class \"VarReg\" inherits components class \"glm\". object class \"VarReg\" list containing following components: modeltype: Text indicating model fit, indicating uncensored approach performed. knots.m, knots.v, degree, meanmodel, varmodel: Returning input variables described converged: Logical argument indicating convergence occurred. iterations: Total iterations performed. reldiff: positive convergence tolerance occurred final iteration. loglik: Numeric variable maximised log-likelihood. boundary: Logical argument indicating MLE boundary parameter space. aic.c: Akaike information criterion corrected small samples aic: Akaike information criterion bic: Bayesian information criterion hqc: Hannan-Quinn information criterion mean.ind: Vector integer(s) indicating column number(s) dataframe  data fit mean model. mean: Vector maximum likelihood estimates mean parameters. var.ind: Vector integer(s) indicating column(s) dataframe  data fit variance model. variance: Vector maximum likelihood estimates variance parameters. data: Dataframe containing variables included model.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/semiVarReg.multi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Semi parametric mean and variance regression (multivariate) — semiVarReg.multi","text":"","code":"data(mcycle) ## run a model with linear mean and linear variance: linmodel<-semiVarReg.multi(mcycle$accel, x=mcycle, mean.model=\"linear\",mean.vars=2, var.model=\"linear\", var.vars=2,  maxit=10000) ## run a model with semi-parametric mean (4 internal knots) and semi-parametric variance (2 knots): ##not run ##semimodel<-semiVarReg.multi(mcycle$accel, x=mcycle, meanmodel=\"semi\",mean.vars=2, varmodel=\"semi\", ##var.vars=2,knots.m=4, knots.v=2, maxit=10000)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/seVarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"SE calculations for mean and variance regression models — seVarReg","title":"SE calculations for mean and variance regression models — seVarReg","text":"seVarReg calculates SE object class VarReg. result boundary, Fishers Information matrix SE given. bootstrapped 95% CI can also calculated. Designed called plot function plotVarReg, rather run user.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/seVarReg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SE calculations for mean and variance regression models — seVarReg","text":"","code":"seVarReg(   x,   boot = FALSE,   bootreps = 1000,   vector.mean = x$data[, 2],   vector.variance = x$data[, 2],   control = list(...),   ... )"},{"path":"https://kristyrobledo.github.io/VarReg/reference/seVarReg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SE calculations for mean and variance regression models — seVarReg","text":"x Object class VarReg determin SE (eg. result semiVarReg). boot Logical indicate bootstrapped CI calculated. Default FALSE. bootreps Number bootstraps performed boot=TRUE. Default 1000. vector.mean Vector x values SE mean calculated. Default x covariate model. vector.variance Vector x values SE variance calculated. Default actual x covariate model. control List control parameters bootstrapped models. See VarReg.control. ... arguments used form default control argument supplied directly","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/seVarReg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SE calculations for mean and variance regression models — seVarReg","text":"result list results. includes: mean.est: dataframe overall results mean model, including parameter estimates model, SEs information matrix (boundary=FALSE) specified, SE bootstrapping bootstrapped 95% CI. variance.est: dataframe overall results variance model, including parameter  estimates model, SEs information matrix (boundary=FALSE) specified,  SE bootstrapping bootstrapped 95% CI. mean.im: dataframe expected information matrices mean (appropriate) variance.im: dataframe expected information matrices variance (appropriate) mean.outputs: dataframe complete output mean graphics. Includes vector.mean input, mean vector (mean.mean) SE vector mean.se.im, bootstrapping outputs appropriate. variance.outputs: dataframe complete output variance graphics. Includes vector.variance input, mean vector (var.mean) SE vector var.se.im, bootstrapping outputs appropriate.","code":""},{"path":[]},{"path":"https://kristyrobledo.github.io/VarReg/reference/seVarReg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SE calculations for mean and variance regression models — seVarReg","text":"","code":"data(mcycle) ##Fit model with range as a covariate in the mean and the variance model semimodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel=\"semi\", varmodel=\"linear\", knots.m=4, maxit=10000) ##Calculate SE se1<-seVarReg(semimodel, boot=FALSE) ##not run: with bootstrapping ##se2<-seVarReg(semimodel, boot=TRUE, bootreps=10) ##not run: calculate mean and SE for a given sequence ##test.seq<-seq(min(mcycle$times), max(mcycle$times), ##by=((max(mcycle$times)-min(mcycle$times))/999)) ##se2<-seVarReg(semimodel, boot=TRUE, bootreps=10, vector.mean=test.seq)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.control.html","id":null,"dir":"Reference","previous_headings":"","what":"Auxillary for controlling VarReg fitting — VarReg.control","title":"Auxillary for controlling VarReg fitting — VarReg.control","text":"Use VarReg.control determine parameters fitting semiVarReg. Typically used internally within functions.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.control.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auxillary for controlling VarReg fitting — VarReg.control","text":"","code":"VarReg.control(bound.tol = 1e-05, epsilon = 1e-06, maxit = 1000)"},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.control.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auxillary for controlling VarReg fitting — VarReg.control","text":"bound.tol Positive tolerance specifying interior parameter space. allows algorithm terminate early interior maximum found. set bound.tol=Inf, early termination attempted. epsilon Positive convergence tolerance. \\(\\theta\\) vector estimates, convergence declared \\(\\sqrt{(\\sum (\\theta_{old} - \\theta_{new})^2)}/ \\sqrt{\\sum (\\theta_{old})^2} \\). smaller bound.tol. maxit integer giving maximum number EM algorithm iterations given parameterisation.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.control.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auxillary for controlling VarReg fitting — VarReg.control","text":"list three components: bound.tol, epsilon maxit .","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.control.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Auxillary for controlling VarReg fitting — VarReg.control","text":"used similarly glm.control. required, may internally passed another function.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.html","id":null,"dir":"Reference","previous_headings":"","what":"VarReg: Semi-parametric mean and variance regression — VarReg","title":"VarReg: Semi-parametric mean and variance regression — VarReg","text":"Methods fitting semi-parametric mean variance models, normal censored data. Also extended allow regression location, scale shape parameters.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"VarReg: Semi-parametric mean and variance regression — VarReg","text":"package provides functions fit semi-parametric mean variance regression models. models based upon EM-type algorithms, can stable convergence properties algorithms additive variance regression models. primary function use linear semi-parametric mean variance models semiVarReg. function also able fit models censored outcome data. also plot function models called plotVarReg. search function also produced order assist users find optimal number knots model (searchVarReg). functions particular use lssVarReg plot function plotlssVarReg. uses skew-normal distribution combines EM algorithm coordinate-ascent type algorithm order fit regression model location, scale shape,  therefore extending semi-parametric models non-normal data. Multivariate models can fit semiVarReg.multi lssVarReg.multi","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/VarReg.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"VarReg: Semi-parametric mean and variance regression — VarReg","text":"Kristy Robledo robledo.kristy@gmail.com","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"vcf dataset. — vcf","title":"vcf dataset. — vcf","text":"dataset containing 100 observations mean velocity circumferential fibre shortening (vcf), made long axis short axis echocardiography.","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"vcf dataset. — vcf","text":"","code":"vcf"},{"path":"https://kristyrobledo.github.io/VarReg/reference/vcf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"vcf dataset. — vcf","text":"data frame 133 rows 3 variables: pid patient identifier vcflong vcf measurement long axis vcfshort vcf measurement short axis","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/vcf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"vcf dataset. — vcf","text":"Data Bland JM, Altman DG. (1986) Statistical methods assessing agreement two methods clinical measurement. Lancet , 307-310. (Supplied Paul D'Arbela)","code":""},{"path":"https://kristyrobledo.github.io/VarReg/reference/vcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"vcf dataset. — vcf","text":"","code":"library(VarReg) data(vcf) attach(vcf) plot(rowMeans(vcf[-1]),vcf$vcflong-vcf$vcfshort)"},{"path":"https://kristyrobledo.github.io/VarReg/news/index.html","id":"varreg-201","dir":"Changelog","previous_headings":"","what":"VarReg 2.0.1","title":"VarReg 2.0.1","text":"Added pkgdown website","code":""},{"path":"https://kristyrobledo.github.io/VarReg/news/index.html","id":"varreg-200","dir":"Changelog","previous_headings":"","what":"VarReg 2.0.0","title":"VarReg 2.0.0","text":"Added documentation Added testing Added multivariate models","code":""}]
