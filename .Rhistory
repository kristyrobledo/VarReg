int.maxit=300, print.it=TRUE, maxit=300)
mle2<-msn.mle(y=Y, trace=TRUE)
mle2
mle2_1<-msn.mle(y=Y, control=list(iter.max=1))
mle2_1
7.56**2
x<-rep(1, length(Y))
kristy<-lssVarReg_save(Y, x, locationmodel="constant", scale2model="constant", shapemodel="constant",
location.init=5.05, scale2.init=7.56,shape.init=1.95,
int.maxit=300, print.it=TRUE, maxit=300)
mle2_2<-msn.mle(y=Y, control=list(iter.max=2))
mle2_3<-msn.mle(y=Y, control=list(iter.max=3))
mle2_4<-msn.mle(y=Y, control=list(iter.max=4))
mle2_5<-msn.mle(y=Y, control=list(iter.max=5))
mle2_6<-msn.mle(y=Y, control=list(iter.max=6))
mle2_7<-msn.mle(y=Y, control=list(iter.max=7))
mle2_8<-msn.mle(y=Y, control=list(iter.max=8))
mle2_9<-msn.mle(y=Y, control=list(iter.max=9))
mle2_10<-msn.mle(y=Y, control=list(iter.max=10))
snmle<-rbind(  c(5.05,7.56,1.95, NA),
c(mle2_1$dp$beta,(mle2_1$dp$Omega),mle2_1$dp$alpha,mle2_1$logL),
c(mle2_2$dp$beta,(mle2_2$dp$Omega),mle2_2$dp$alpha,mle2_2$logL),
c(mle2_3$dp$beta,(mle2_3$dp$Omega),mle2_3$dp$alpha,mle2_3$logL),
c(mle2_4$dp$beta,(mle2_4$dp$Omega),mle2_4$dp$alpha,mle2_4$logL),
c(mle2_5$dp$beta,(mle2_5$dp$Omega),mle2_5$dp$alpha,mle2_5$logL),
c(mle2_6$dp$beta,(mle2_6$dp$Omega),mle2_6$dp$alpha,mle2_6$logL),
c(mle2_7$dp$beta,(mle2_7$dp$Omega),mle2_7$dp$alpha,mle2_7$logL),
c(mle2_8$dp$beta,(mle2_8$dp$Omega),mle2_8$dp$alpha,mle2_8$logL),
c(mle2_9$dp$beta,(mle2_9$dp$Omega),mle2_9$dp$alpha,mle2_9$logL),
c(mle2_10$dp$beta,(mle2_10$dp$Omega),mle2_10$dp$alpha,mle2_10$logL)
)
snmle
snmle2<-rbind(snmle, matrix(rep(snmle[7,], 19), ncol=4, byrow=TRUE))
kristy_mle<-rbind(c(5.05,7.56,1.95, NA), kristy$dat[1:29,])
#comparison:
compare<-cbind(c(kristy$location, kristy$scale2, kristy$shape),c(mle2$dp$beta,(mle2$dp$Omega),mle2$dp$alpha))
dimnames(compare)[[2]]<-c("Kristy","msn.mle")
print(compare)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.55,4.70))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(3.2,3.35))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(2.3,2.7))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration")
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
seq<-seq(0,41)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.55,4.70))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(3.2,3.35))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(2.3,2.7))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration")
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
mle2
mle2_1<-msn.mle(y=Y, control=list(iter.max=1))
mle2_2<-msn.mle(y=Y, control=list(iter.max=2))
mle2_3<-msn.mle(y=Y, control=list(iter.max=3))
mle2_4<-msn.mle(y=Y, control=list(iter.max=4))
mle2_5<-msn.mle(y=Y, control=list(iter.max=5))
mle2_6<-msn.mle(y=Y, control=list(iter.max=6))
mle2_7<-msn.mle(y=Y, control=list(iter.max=7))
# mle2_8<-msn.mle(y=Y, control=list(iter.max=8))
# mle2_9<-msn.mle(y=Y, control=list(iter.max=9))
# mle2_10<-msn.mle(y=Y, control=list(iter.max=10))
snmle<-rbind(  c(5.05,7.56,1.95, NA),
c(mle2_1$dp$beta,(mle2_1$dp$Omega),mle2_1$dp$alpha,mle2_1$logL),
c(mle2_2$dp$beta,(mle2_2$dp$Omega),mle2_2$dp$alpha,mle2_2$logL),
c(mle2_3$dp$beta,(mle2_3$dp$Omega),mle2_3$dp$alpha,mle2_3$logL),
c(mle2_4$dp$beta,(mle2_4$dp$Omega),mle2_4$dp$alpha,mle2_4$logL),
c(mle2_5$dp$beta,(mle2_5$dp$Omega),mle2_5$dp$alpha,mle2_5$logL),
c(mle2_6$dp$beta,(mle2_6$dp$Omega),mle2_6$dp$alpha,mle2_6$logL),
c(mle2_7$dp$beta,(mle2_7$dp$Omega),mle2_7$dp$alpha,mle2_7$logL)
# c(mle2_8$dp$beta,(mle2_8$dp$Omega),mle2_8$dp$alpha,mle2_8$logL),
# c(mle2_9$dp$beta,(mle2_9$dp$Omega),mle2_9$dp$alpha,mle2_9$logL),
# c(mle2_10$dp$beta,(mle2_10$dp$Omega),mle2_10$dp$alpha,mle2_10$logL)
)
snmle
snmle
snmle2<-rbind(snmle, matrix(rep(snmle[7,], 37), ncol=4, byrow=TRUE))
kristy_mle<-rbind(c(5.05,7.56,1.95, NA), kristy$dat[1:40,])
snmle2<-rbind(snmle, matrix(rep(snmle[7,], 33), ncol=4, byrow=TRUE))
compare<-cbind(c(kristy$location, kristy$scale2, kristy$shape),c(mle2$dp$beta,(mle2$dp$Omega),mle2$dp$alpha))
dimnames(compare)[[2]]<-c("Kristy","msn.mle")
print(compare)
seq<-seq(0,41)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.55,4.70))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(3.2,3.35))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(2.3,2.7))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration")
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
seq<-seq(0,40)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.55,4.70))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.5,5))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.9,5.1))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(3.2,3.35))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
compare<-cbind(c(kristy$location, kristy$scale2, kristy$shape),c(mle2$dp$beta,(mle2$dp$Omega),mle2$dp$alpha))
dimnames(compare)[[2]]<-c("Kristy","msn.mle")
print(compare)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(7.5,8))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
sqrt(7.84)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.7,2.9))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
snmle2
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.85))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(2.3,2.7))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.7))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.8,2.2))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.2))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration")
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.9,5.1))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.84))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.2))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration")
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-205,-210))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration"
)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-205,-208))
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206,-208))
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.5,-207))
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.6,-206.8))
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration"
)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.8,-206.7))
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.78,-206.75))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=1, ylim=c(4.9,5.1))
lines(seq, snmle2[,1], lwd=1,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.9,5.1))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.84))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.2))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.78,-206.75))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
save(Y, file = "C:/Users/43486037/Dropbox/Phd/Thesis/thesis_v1/ch8_skew/Ysample_final.Rdata")
seq<-seq(0,40)
pdf("C:/Users/43486037/Dropbox/Phd/Thesis/thesis_v1/ch8_skew/compare.pdf", height=8, width=8, pointsize=12)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.9,5.1))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.84))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.2))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.78,-206.75))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
dev.off()
print(compare)
?print
print(compare, digits=3)
print(compare, digits=5)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.95,5.1))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.84))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.2))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.78,-206.75))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.95,5.1))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.82))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.1))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.78,-206.75))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.96,5.06))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.82))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.1))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.78,-206.75))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
seq<-seq(0,40)
pdf("C:/Users/43486037/Dropbox/Phd/Thesis/thesis_v1/ch8_skew/compare.pdf", height=8, width=8, pointsize=12)
par(mfrow=c(2,2))
plot(seq, kristy_mle[,1],type='l', col="blue", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.96,5.06))
lines(seq, snmle2[,1], lwd=2,  col="red")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(kristy_mle[,2]),  lwd=2,type='l', col="blue", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.82))
lines(seq, sqrt(snmle2[,2]),  lwd=2, col="red")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, (kristy_mle[,3]), type='l',  lwd=2,col="blue", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.1))
lines(seq,  snmle2[,3],   lwd=2,col="red")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1, (kristy_mle[,4]), type='l',  lwd=2,col="blue", ylab="Log likelihood", xlab="Iteration", ylim=c(-206.78,-206.75))
lines(seq-1,  snmle2[,4],  lwd=2, col="red")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
dev.off()
par(mfrow=c(2,2))
plot(seq,snmle2[,1] ,type='l', col="red", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.96,5.06))
lines(seq, kristy_mle[,1], lwd=2,  col="blue")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(snmle2[,2]),  lwd=2,type='l', col="red", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.82))
lines(seq,sqrt(kristy_mle[,2]),  lwd=2, col="blue")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, snmle2[,3], type='l',  lwd=2,col="red", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.1))
lines(seq,(kristy_mle[,3])  ,   lwd=2,col="blue")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1,snmle2[,4],type='l',lwd=2,col="red",ylab="Log likelihood",xlab="Iteration",ylim=c(-206.78,-206.75))
lines(seq-1,  (kristy_mle[,4]),  lwd=2, col="blue")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
seq<-seq(0,40)
pdf("C:/Users/43486037/Dropbox/Phd/Thesis/thesis_v1/ch8_skew/compare.pdf", height=8, width=8, pointsize=12)
par(mfrow=c(2,2))
plot(seq,snmle2[,1] ,type='l', col="red", ylab="Location", xlab="Iteration", lwd=2, ylim=c(4.96,5.06))
lines(seq, kristy_mle[,1], lwd=2,  col="blue")
legend("topright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"), lty=1, title="MLE method", bty = "n")
mtext('A', side=3, line=2, at=0, adj=4)
plot(seq, sqrt(snmle2[,2]),  lwd=2,type='l', col="red", ylab="Scale", xlab="Iteration",ylim=c(2.74,2.82))
lines(seq,sqrt(kristy_mle[,2]),  lwd=2, col="blue")
mtext('B', side=3, line=2, at=0, adj=4)
plot(seq, snmle2[,3], type='l',  lwd=2,col="red", ylab="Shape", xlab="Iteration", ylim=c(1.9,2.1))
lines(seq,(kristy_mle[,3])  ,   lwd=2,col="blue")
mtext('C', side=3, line=2, at=0, adj=4)
plot(seq-1,snmle2[,4],type='l',lwd=2,col="red",ylab="Log likelihood",xlab="Iteration",ylim=c(-206.78,-206.75))
lines(seq-1,  (kristy_mle[,4]),  lwd=2, col="blue")
legend("bottomright", c("Cyclic coordinate ascent", "SN package"), cex=0.8, col=c("blue", "red"),lty=1,   title="MLE method", bty = "n")
mtext('D', side=3, line=2, at=0, adj=4)
dev.off()
library(VarReg)
devtools::document()
devtools::document()
?seVarReg
data("mcycle")
summary(mcycle)
?VarReg
devtools::document()
library(VarReg)
devtools::document()
devtools::document()
library(VarReg)
?plotVarReg
library(VarReg)
devtools::document()
library(VarReg)
library(VarReg)
devtools::document()
devtools::document()
library(VarReg)
install.packages("tidyverse")
library(tidyverse)
L.Fun <- function(x){
y <- ((x/(1-x))^129)*((1-x)^419)
return(y)
}
plot(L.Fun())
ggplot(data.frame(x=c(0.225, 0.4)), aes(x=x)) +
stat_function(fun = function(x){L.Fun(x)}) +
ggtitle("Likelihood function of fertility rates") +
labs(x = "Fertility Rate", y = "Likelihood Function")
ggplot(data.frame(x=c(0, 1)), aes(x=x)) +
stat_function(fun = function(x){L.Fun(x)}) +
ggtitle("Likelihood function of fertility rates") +
labs(x = "Fertility Rate", y = "Likelihood Function")
install.packages("VarReg")
library(VarReg)
install.packages("VarReg")
?VarReg
library(VarReg)
?VarReg
citation(package = "VarReg")
library(VarReg)
devtools::document()
?VarReg.control
devtools::document()
?VarReg.control
library(VarReg)
data(mcycle)
lssmodel<-lssVarReg(mcycle$accel, mcycle$times,  locationmodel="linear", scale2model="linear",
constantmodel="constant", maxit=10000)
?lssVarReg
lssmodel<-lssVarReg(mcycle$accel, mcycle$times,  locationmodel="linear", scale2model="linear",
shapemodel="constant", maxit=10000)
lssmodel<-lssVarReg(mcycle$accel, mcycle$times,  locationmodel="linear", scale2model="linear",
shapemodel="constant", maxit=100)
plotlssVarReg(lssmodel, xlab="Time in seconds", ylab="Acceleration")
install.packages("cranlogs")
?cranlogs
library(cranlogs)
?`cranlogs-package`
?cranlogs
cran_downloads(packages = "VarReg", from=20170101, to='last-day')
cran_downloads(packages = "VarReg", from=2017-01-01, to='last-day')
cran_downloads(packages = "VarReg", from="2017-01-01", to="2017-04-11")
dl<-cran_downloads(packages = "VarReg", from="2017-01-01", to="2017-04-11")
summary(dl)
sum(dl$count)
?VarReg
library(VarReg)
devtools::document()
library(VarReg)
summary(vcf)
length(vcf)
nrows(vcf)
nrow(vcf)
plot(vcf$vcflong-vcf$vcfshort, mean(vcf$vcflong,vcf$vcfshort))
plot(vcf$vcflong-vcf$vcfshort, average(vcf$vcflong,vcf$vcfshort))
?mean
rowMeans()
plot(vcf$vcflong-vcf$vcfshort, rowMeans(vcf$vcflong,vcf$vcfshort))
rowMeans(vcf$vcflong,vcf$vcfshort)
rowMeans(vcf[-1])
rowMeans(vcf[,1:10])
vcf[,1:10]
vcf[1:10,]
1.07    = 1.33
1.07    + 1.33
2.4/2
plot(vcf$vcflong-vcf$vcfshort, rowMeans(vcf[-1])
)
plot(rowMeans(vcf[-1]),vcf$vcflong-vcf$vcfshort)
devtools::document()
library(VarReg)
library(VarReg)
devtools::document()
library(VarReg)
devtools::document()
library(VarReg)
library(VarReg)
install.packages("sas7bdat")
library(sas7bdat)
dat<-read.sas7bdat("Y:/Statistics/1 STUDIES/Neonatology and Pediatrics/APTS main study/8.5 Analysis/Final Analysis/Final analysis datasets/Derived/outcomes36weeks.sas7bdat")
del<-read.sas7bdat("Y:/Statistics/1 STUDIES/Neonatology and Pediatrics/APTS main study/8.5 Analysis/Final Analysis/Final analysis datasets/Source/MRG/Delivery.sas7bdat")
out<-read.sas7bdat("Y:/Statistics/1 STUDIES/Neonatology and Pediatrics/APTS main study/8.5 Analysis/Final Analysis/Final analysis datasets/Derived/outcomes36weeks.sas7bdat")
vaginal<-out[del$Caesar==0]
vaginal<-out[del$Caesar==0,]
tables[del$Caesar]
table[del$Caesar]
table(del$Caesar)
vaginal<-out[del$Caesar==0,]
vag <- gee(death36weeks ~ itminterventionrnd_c ,
+ data = vaginal, id = familyid, family = binomial(link="log"),
+ corstr = "exchangeable")
vag <- gee(death36weeks ~ itminterventionrnd_c ,
data = vaginal, id = familyid, family = binomial(link="log"),
corstr = "exchangeable")
install.packages("gee")
library(gee)
vag <- gee(death36weeks ~ itminterventionrnd_c ,
data = vaginal, id = familyid, family = binomial(link="log"),
corstr = "exchangeable")
vag <- gee(dead36weeks ~ itminterventionrnd_c ,
data = vaginal, id = familyid, family = binomial(link="log"),
corstr = "exchangeable")
vag <- gee(dead36weeks ~ ITMINTERVENTIONRND_C ,
data = vaginal, id = familyid, family = binomial(link="log"),
corstr = "exchangeable")
vag <- gee(dead36weeks ~ ITMINTERVENTIONRND_C ,
data = vaginal, id = familyiID, family = binomial(link="log"),
corstr = "exchangeable")
vag <- gee(dead36weeks ~ ITMINTERVENTIONRND_C ,
data = vaginal, id = familyID, family = binomial(link="log"),
corstr = "exchangeable")
vag <- gee(dead36weeks ~ ITMINTERVENTIONRND_C ,
data = vaginal, id = familyID, family = binomial(link="log"),
corstr = "unstructured")
vag <- gee(dead36weeks ~ ITMINTERVENTIONRND_C ,
data = vaginal, id = familyID, family = binomial(link="logit"),
corstr = "unstructured")
?gee
vag <- gee(dead36weeks ~ ITMINTERVENTIONRND_C ,
data = vaginal, family = binomial(link="logit"),
)
vag <- glm(dead36weeks ~ ITMINTERVENTIONRND_C ,
data = vaginal, family = binomial(link="logit"),
)
summary(vag)
install.packages("sn")
install.packages("D:/Users/krobledo/Downloads/sn_1.5-1.tar.gz", repos = NULL, type = "source")
install.packages("mnormt")
install.packages("mnormt")
install.packages("sn")
library(VarReg)
library(VarReg)
data(mcycle)
linmodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel="linear", varmodel="linear",
maxit=10000)
linmodel
library(VarReg)
library(VarReg)
library(VarReg)
library(VarReg)
install.packages("VarReg")
?VarReg
library(VarReg)
?`VarReg-package`
usethis::use_readme_rmd()
library(VarReg)
## read in dataset
data(mcycle)
## run a model with linear mean and linear variance:
linmodel<-semiVarReg(mcycle$accel, mcycle$times, meanmodel="linear", varmodel="linear",
maxit=10000)
plotVarReg(linmodel)
linmodel$meanmodel
linmodel$mean
linmodel$variance
plotVarReg(linmodel, ci=TRUE, ci.type = "im")
+ Total downloads `r badge_cran_download("VarReg", "grand-total", "blue")`
+ Monthly Downloads `r badge_cran_download("VarReg", "last-month", "green")`
+ Weekly Downloads `r badge_cran_download("VarReg", "last-week", "yellow")`
badge_cran_download("VarReg", "grand-total", "blue")
install.packages("badger")
library(badger)
badge_cran_release("VarReg", "orange")
